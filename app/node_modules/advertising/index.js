var adConfig = require('./config/ad-config.json');
var accountConfig = require('./config/account');
var _ = require('lodash');
var getAdSlotConfig = require('./responsive-helpers').getAdSlotConfig;

var ADTECH = window.ADTECH;


var getSiteAdConfig = function (siteId) {
  return _.where(adConfig, {'website_id': siteId})[0];
};


// load the config for aargauerzeitung.ch
var websiteId = "1179268";
var demoSiteConfig = getSiteAdConfig(websiteId);
// articel site id
var articleSiteId = "783730";

var setupAds = function (siteAdConfig) {
  _.each(siteAdConfig.page_types, function (pageType) {
    _.each(pageType.slots, function (slot) {
      var slotName = slot.name;
      var slotPlacements = slot.placements;
      var slotConfig = getAdSlotConfig(slotPlacements);
      // don't get confused on the naming here, Adtech treats everything as placements
      // while we have slots which can have multiple placements for responsive ads
      ADTECH.config.placements[slotName] = slotConfig;
    });
  });
};



// Require all Ad placement configurations

var AdTech = function(selector) {

  // Select all ads on the page
  var ads = document.querySelectorAll(selector);

  if (typeof ADTECH !== 'undefined') {
    accountConfig.siteid = articleSiteId;

    // Configure our account
    ADTECH.config.page = accountConfig;

    // setup ad slots
    setupAds(demoSiteConfig);

    // Loop them and enqueue
    _.each(ads, function(ad) {
      ADTECH.enqueueAd(ad.getAttribute('id'));
    });

    // Execute
    ADTECH.executeQueue({
      multiAd: {
        disableAdInjection: true
      }
    });

  } else {

    // Remove all our ad slots
    _.each(ads, function(ad) {
      ad.parentNode.removeChild(ad);
    });

  }

};

module.exports = AdTech;
