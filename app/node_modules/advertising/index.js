var _ = require('lodash');
var getPageConfig = require('./helpers/get-page-config');
var getAdSlotConfig = require('./helpers/responsive-ads').getAdSlotConfig;


var ADTECH = window.ADTECH;


var Advertising = {
  init: function (selector) {
    // load the config for current page from global az object
    var pageAdConfig = _.get(window.az, 'advertising.pageConfig');
    var siteId;
    var pageConfig;
    var ads;
    var keywords;

    // exit if no ad configuration for page is found
    if (!pageAdConfig || !_.isObject(pageAdConfig)) {
      // console.warn('no advertisng configured');
      return;
    }

    if (typeof ADTECH !== 'undefined') {
      // turn on debug mode if needed
      // ADTECH.debugMode = true;

      // get current site id
      siteId = pageAdConfig.siteId;
      // get the ad keywords
      keywords = this.getAdKeywords().join(':');
      // page config
      pageConfig = getPageConfig(siteId, keywords);
      ADTECH.config.page = pageConfig;

      // setup ad slots
      this.setupAds(pageAdConfig.slots);

      // Select all ads on the page
      ads = document.querySelectorAll(selector);

      // Loop them and enqueue
      _.each(pageAdConfig.slots, function(slot) {
        ADTECH.enqueueAd(slot.name);
      });

      // Execute
      ADTECH.executeQueue({
        multiAd: {
          disableAdInjection: true
        }
      });

    } else {
      // Remove all our ad slots
      _.each(ads, function(ad) {
        ad.parentNode.removeChild(ad);
      });

    }
  },

  setupAds: function (adSlots) {
    _.each(adSlots, function (slot) {
      var slotName = slot.name;
      var slotPlacements = slot.placements;
      var slotConfig = getAdSlotConfig(slotPlacements);
      // don't get confused on the naming here, Adtech treats everything as placements
      // while we have slots which can have multiple placements for responsive ads
      ADTECH.config.placements[slotName] = slotConfig;
    });
  },

  getAdKeywords: function () {
    var keywords = [];
    var keywordAttribute = 'data-ad-keywords';
    var keyWordSelector = '[' + keywordAttribute + ']';
    var keywordElements = document.querySelectorAll(keyWordSelector);
    _.each(keywordElements, function (element) {
      var itemKeywords = element.getAttribute(keywordAttribute).split(',');
      // trim whitespace for each keyword
      itemKeywords = _.map(itemKeywords, function (keyword) {
        return keyword.trim().toLowerCase();
      });

      keywords = keywords.concat(itemKeywords);

    });
    keywords = _.unique(keywords);

    return keywords;
  }

};

module.exports = Advertising;
