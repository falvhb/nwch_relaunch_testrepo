var _ = require('lodash');
var adConfig = require('./config/ad-config.json');
var getWebsiteAdConfig= require('./helpers/get-website-ad-config');
var getAccountConfig = require('./helpers/get-account-config');
var getPageSlots = require('./helpers/get-page-slots').getPageSlots;
var getAdSlotConfig = require('./helpers/responsive-ads').getAdSlotConfig;
var getDomainFromSkinName = require('../helpers/get-domain-from-skin');


var ADTECH = window.ADTECH;



var getWebsiteSkin = function () {
  var skinName = '';
  var element = document.querySelector("meta[name=skin]");
  if(element) {
    skinName = element.getAttribute('content');
  }

  return skinName;
};


var setupAds = function (adSlots) {
  _.each(adSlots, function (slot) {
    var slotName = slot.name;
    var slotPlacements = slot.placements;
    var slotConfig = getAdSlotConfig(slotPlacements);
    // don't get confused on the naming here, Adtech treats everything as placements
    // while we have slots which can have multiple placements for responsive ads
    ADTECH.config.placements[slotName] = slotConfig;
  });
};




var AdTech = function(selector) {
  // load the config for aargauerzeitung.ch
  // TODO: make this dynamic
  var skinName = getWebsiteSkin();
  var domain = getDomainFromSkinName(skinName);
  domain = domain.replace('www.', '');
  // page config
  var siteConfig = getWebsiteAdConfig(domain, adConfig);
  // retrieve siteId from embedded pageInfo object
  var pageKind = _.get(window.az, 'context.pageInfo.kind');
  var pageAdConfig = getPageSlots(pageKind, siteConfig);
  var siteId = pageAdConfig.site_id;
  // page account config
  var accountConfig = getAccountConfig(siteId);

  // Select all ads on the page
  var ads = document.querySelectorAll(selector);

  if (typeof ADTECH !== 'undefined') {
    ADTECH.debugMode = true;
    // Configure our account
    ADTECH.config.page = accountConfig;

    // setup ad slots
    setupAds(pageAdConfig.slots);

    // Loop them and enqueue
    _.each(ads, function(ad) {
      ADTECH.enqueueAd(ad.getAttribute('id'));
    });

    // Execute
    ADTECH.executeQueue({
      multiAd: {
        disableAdInjection: true
      }
    });

  } else {
    // Remove all our ad slots
    _.each(ads, function(ad) {
      ad.parentNode.removeChild(ad);
    });

  }

};

module.exports = AdTech;
