import React from 'react';
import _ from 'lodash';

import ArticleHeader from 'components/article-header';
import ArticleDetail from 'components/article-detail';
import RecommendationsBottom from 'components/recommendations-bottom';
import RecommendationsTop from 'components/recommendations-top';
import Container from 'components/container';

export default React.createClass({

  displayName: 'ArticlePage',

  breakpoint: 1150,

  getInitialState() {
    return {
      // No JS / server.js
      support: false,
      // Initiale state is not mobile
      mobile: false
    };
  },

  // Return the viewport width
  getViewportWidth() {
    return Math.max(document.documentElement.clientWidth, window.innerWidth);
  },

  // Method called when the window gets resized; redefines the `mobile` state
  handleResize() {
    this.setState({
      mobile: this.getViewportWidth() <= this.breakpoint
    });
  },

  componentDidMount() {
    window.addEventListener('resize', _.debounce(this.handleResize, 250));

    this.setState({ support: true });
    this.handleResize();

    // Reperform the check as `setState(..)` is asynchronous
    var isMobile = (this.getViewportWidth() <= this.breakpoint);

    if (isMobile) {
      this.injectSidebar();
    } else {
      this.offsetSidebar();
    }
  },

  // // Hack, hack, hack
  // // Remove me or you'll be damned.
  // injectSidebar() {
  //   var recommendations = document.querySelector('.recommendations-top').cloneNode(true);
  //   var intro = document.querySelector('.intro');
  //   intro.parentNode.insertBefore(recommendations, intro.nextSibling);
  // },

  // // Hack, hack, hack
  // // Remove me or you'll be damned.
  // offsetSidebar() {
  //   var mainAsset = document.querySelector('.main-asset');
  //   var sidebar = document.querySelector('.sidebar');
  //   sidebar.style.transform = 'translateY(' + (mainAsset.offsetTop - 36) + 'px)';
  // },

  render() {
    return (
      <Container>
        <ArticleHeader {...this.props.header} />
        <div className='wrapper'>
          <div className='main'>
            <ArticleDetail {...this.props} />
            <RecommendationsBottom teasers={this.props.teasers} />
          </div>
          <div className='sidebar'>
            <RecommendationsTop teasers={this.props.teasersTop} />
          </div>
        </div>
      </Container>
    );
  }

});
