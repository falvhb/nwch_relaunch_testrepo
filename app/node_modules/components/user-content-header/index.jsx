import React from 'react';
import bem from 'react-bem-helper';
import Icon from 'components/icon';
import { capitalize } from 'lodash/string';

const classes = new bem('ugc-header');

export default React.createClass({

  displayName: 'UGCHeader',

  propTypes: {
    type: React.PropTypes.oneOf(['leserbeitrag', 'vereinsmeldung', 'sportverein', 'gemeindebeitrag']).isRequired,
    city: React.PropTypes.shape({
      name: React.PropTypes.string.isRequired,
      url: React.PropTypes.string.isRequired,
      shield_url: React.PropTypes.string
    }),
    author: React.PropTypes.shape({
      name: React.PropTypes.string.isRequired,
      url: React.PropTypes.string.isRequired,
      image: React.PropTypes.string
    })
  },

  nameForType(type) {
    return capitalize({
      sportverein: 'sportvereinsmeldung',
    }[type] || type)
  },

  renderBlock(props) {

  },

  renderCity() {
    var { name, image, url } = this.props.city;

    return (
      <span key='city' {...classes('block')} itemProp="contentLocation">
        { 'aus ' }
        <a href={url}>
          <span itemProp="name">{ name }</span>
          <img itemProp="logo" src={ image } alt="" {...classes('avatar', 'city')} />
        </a>
      </span>
    )
  },

  renderClub() {
    var { name, image, url } = this.props.club;

    return (
      <a key='city' {...classes('block')} itemProp="contentLocation"href={url}>
        <span itemProp="name">{ name }</span>
        <img itemProp="logo" src={ image } alt="" {...classes('avatar', 'city')} />
      </a>
    )
  },

  renderAuthor() {
    var { name, image, url } = this.props.author;

    return (
      <span key='author' {...classes('block')} itemProp="author">
        { 'von ' }
        <a href={url}>
          <span itemProp="name"> { name }</span>
          <img itemProp="image" src={ image } alt="" {...classes('avatar', 'author')} />
        </a>
      </span>
    )
  },

  render() {
    var { type } = this.props;

    if (!type) {
      return null;
    }

    var items = [
      <Icon {...classes('icon')} key='icon' id='megaphone' />,
      this.nameForType(type) + ' ',
    ];

    switch (type) {
      case 'leserbeitrag':
        items.push(this.renderAuthor(), this.renderCity())
        break;
      case 'gemeindebeitrag':
        items.push(this.renderCity(), this.renderAuthor())
        break;
      case 'vereinsmeldung':
      case 'sportverein':
        items.push(this.renderClub(), this.renderAuthor())
        break;
    }

    return (
      <div {...classes({ extra: 'type-detail'})}>
        { items }
      </div>
    );
  }
});
