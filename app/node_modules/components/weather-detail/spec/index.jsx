/* eslint-disable no-unused-expressions, no-unused-vars */
/* global expect:true, assert:true, chai:true */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import Test from 'legit-tests/no-dom';
import { expect, assert, should } from 'chai';
import sinon from 'sinon';
import sinonChai from 'sinon-chai';
chai.should();
chai.use(sinonChai);

import WeatherDetail from 'components/weather-detail';
import data from 'components/weather-detail/.data';

describe('Weather Detail', () => {
  var reactElement,
    onSelectParish,
    component;

  describe('renders', () => {
    beforeEach(() => {
      reactElement = <WeatherDetail {...data} />;
      component = TestUtils.renderIntoDocument(reactElement);
    });

    var parish = data.parishes.name;

    it('a React Component', () => {
      expect(TestUtils.isCompositeComponentWithType(component, WeatherDetail)).to.be.true;
    });

    it('default parish to aarau', () => {
      // console.log(parish);
      // expect(component.getParishByName(parish).to.have.any.keys('Aarau'));
      // console.log(component.getParishByName(parish));
    });
  });

  // using module legit-tests for cleaner syntax

  describe('handles', () => {
    var props;

    beforeEach(() => {
      props = {
        onChange: sinon.spy()
      };
    });

    // it('notification on changing of text in Dropdown', () => {
    //   var text,
    //     event;

    //   text = 'Aarau';
    //   event = {
    //     target: { value: text }
    //   };

      // Test(<WeatherDetail {...data} onChange={event} />)
      //   .find('select')
      //   .simulate({method: 'change', element: 'select', options: event})
      //   .test(() => {
      //     onSelectParish.should.have.been.calledWithMatch(text);
      //   });
    // });
  });
});
