/* eslint-disable no-unused-expressions, no-unused-vars */
/* global expect:true, assert:true, chai:true */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import Test from 'legit-tests/no-dom';
import { expect, assert, should } from 'chai';
import sinon from 'sinon';
import sinonChai from 'sinon-chai';
chai.should();
chai.use(sinonChai);

import WeatherDetail from 'components/weather-detail';
import data from 'components/weather-detail/.data';

describe('Weather Detail', () => {
  var reactElement,
    selectCity,
    component;

  describe('renders', () => {
    beforeEach(() => {
      reactElement = <WeatherDetail {...data} />;
      component = TestUtils.renderIntoDocument(reactElement);
    });

    it('a React Component', () => {
      expect(TestUtils.isCompositeComponentWithType(component, WeatherDetail)).to.be.true;
    });
  });

  // using module legit-tests for cleaner syntax

  // describe('handles', () => {
  //   var props;

  //   beforeEach(() => {
  //     props = {
  //       onChange: sinon.spy()
  //     };
  //   });

  //   it('notification on changing of text in Dropdown', () => {
  //     var text,
  //       event;

  //     text = 'Aarau';
  //     event = {
  //       target: { value: text }
  //     };

  //     Test(<WeatherDetail {...data} onChange={event} />)
  //       .find('select')
  //       .simulate({method: 'change', element: 'select', options: event})
  //       .test(() => {
  //         //selectCity.should.have.been.calledWithMatch(text);
  //       });
  //   });
  // });
});
