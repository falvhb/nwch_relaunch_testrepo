import ArticleByline from 'components/article-byline';
import React from 'react/addons';
import { expect } from 'chai';

import fixtures from 'components/article-byline/.variations';


describe('Article Byline', function() {

  describe('renders author and source', function() {
    var byline;

    it('prefixes the author with "von"', () => {
      var props = fixtures[0].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).to.contain('von ');
    });

    it('does not prefixes the author when no author is given', () => {
      var props = fixtures[2].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).not.to.contain('von ');
    });

    it('separates author and source with a dash', () => {
      var props = fixtures[0].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).to.contain(' — ');
    });

    it('only shows a dash separator if there is an author and source', () => {
      // author only
      var props = fixtures[1].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).not.to.contain(' — ');
      // source only
      props = fixtures[2].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).not.to.contain(' — ');
    });

    it('contains the author itemprop attribute', () => {
      var props = fixtures[0].data;
      byline  = React.renderToString(React.createElement(ArticleByline, props));
      expect(byline).to.contain('itemprop="author"');
    });

  });
});
