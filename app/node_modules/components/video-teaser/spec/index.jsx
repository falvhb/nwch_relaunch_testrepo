/* eslint-disable no-unused-expressions, no-unused-vars */
/* global expect:true, assert:true, chai:true */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import Test from 'legit-tests/no-dom';
import { expect, assert, should } from 'chai';
import sinon from 'sinon';
import sinonChai from 'sinon-chai';
chai.should();
chai.use(sinonChai);

import VideoTeaser from 'components/video-teaser';
import data from 'components/video-teaser/.data';

describe('Video Teaser', () => {
  var reactElement,
    component;

  describe('renders', () => {
    beforeEach(() => {
      reactElement = <VideoTeaser {...data} />;
      component = TestUtils.renderIntoDocument(reactElement);
    });

    it('a DOM Component with a BEM class', () => {
      var componentWithClass = TestUtils.findRenderedDOMComponentWithClass(component, 'video-teaser');
      expect(TestUtils.isDOMComponent(componentWithClass)).to.be.true;
    });

  });

  // using module legit-tests for cleaner syntax
  // describe('handles', () => {
  //   var props;

  //   beforeEach(() => {
  //     props = {
  //       onChangeSearchText: sinon.spy(),
  //       onSearch: sinon.spy()
  //     };
  //   });

  //   it('notification on changing of text in text field', () => {
  //     var text,
  //       event;

  //     text = 'text input';
  //     event = {
  //       target: { value: text }
  //     };

  //     Test(<VideoLibrarySearch {...props} />)
  //       .find('input')
  //       .simulate({method: 'change', element: 'input', options: event})
  //       .element(() => {
  //         props.onChangeSearchText.should.have.been.calledWithMatch(text);
  //       });
  //   });

  //   it('pressing enter in text field', () => {
  //     var event;

  //     event = {
  //       key: 'Enter',
  //       keyCode: 13,
  //       which: 13
  //     };

  //     Test(<VideoLibrarySearch {...props} />)
  //       .find('input')
  //       .simulate({method: 'keyDown', element: 'input', options: event})
  //       .element(() => {
  //         props.onSearch.should.have.been.called;
  //       });
  //   });
  // });

});
