/*eslint-disable no-unused-expressions */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import { expect } from 'chai';

import VideoLibrarySearch from 'components/video-library-search';
import Button from 'components/button';


describe('Video Library Search', function() {
  var reactElement;
  var component;

  beforeEach(function() {
    reactElement = <VideoLibrarySearch />;
    component = TestUtils.renderIntoDocument(reactElement);
  });

  describe('renders', function() {
    it('a React Element', function() {
      expect(TestUtils.isElement(reactElement)).to.be.true;
    });

    it('a React Component', function() {
      expect(TestUtils.isCompositeComponentWithType(component, VideoLibrarySearch)).to.be.true;
    });

    it('a DOM Component with a BEM class', function() {
      var componentWithClass = TestUtils.findRenderedDOMComponentWithClass(component, 'video-library-search');
      expect(TestUtils.isDOMComponent(componentWithClass)).to.be.true;
    });

    it('a Button', function() {
      expect(TestUtils.isCompositeComponent(TestUtils.findRenderedComponentWithType(component, Button))).to.be.true;
    });

    it('a text field', function() {
      var textField = TestUtils.findRenderedDOMComponentWithTag(component, 'input');
      expect(TestUtils.isDOMComponent(textField)).to.be.true;
    });
  });

  // describe('calls', function() {
  //   it('...', function() {
  //     expect(TestUtils.isElement(reactElement)).to.be.true;
  //   });
  // });
});
