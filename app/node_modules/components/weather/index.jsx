import React from 'react';
import BEM from 'react-bem-helper';
import axios from 'axios';
// import moment from 'moment';

import Section from 'components/section';
import SectionHeader from 'components/section-header';
import WeatherDetail from 'components/weather-detail';
import WeatherForecastList from 'components/weather-forecast-list';

const classes = new BEM('Weather');

export default React.createClass({

  displayName: 'Weather',

  propTypes: {
    cities: React.PropTypes.array.isRequired,
    forecast: React.PropTypes.object.isRequired
  },

  getInitialState() {
    return this.state = {
      // @TODO: make sure code works when this.props.forecast is not there
      // Hack to make it temporarily work while integrating into page
      // styleguide only: this.props.forecast
      city: '1',
      forecast: this.props.forecast,
      forecastDays: this.props.forecastDays
    };
  },

  // getForecastData(days) {
  //   var getTime = moment().locale('de').hours();
  //   // console.log("die Zeit", getTime);
  //   var result = parseInt(getTime / 3);
  //   // console.log("das resultat", result);
  //   var index = Math.round(result);
  //   return days[index];
  // },

  selectCity(city) {

    axios.get('http://api-azdev.lovelysystems.com/api/v1/weather/3h?city=' + city)
    .then((response3hData) => {
      axios.get('http://api-azdev.lovelysystems.com/api/v1/weather/day?city=' + city)
      .then((responseDaysData) => {
        this.setState({
          city: city,
          forecast: response3hData.data.data.forecast,
          forecastDays: responseDaysData.data.data.forecast
        });
      });
    }).catch(() => {

    });
  },

  render() {

    // var forecastData = this.getForecastData(this.props.forecast.days);

    return (
      <div {...classes()}>
        <SectionHeader title='Wetter' titleModifier='large' />
        <Section modifier='default'>
          <WeatherDetail
            cities={this.props.cities}
            city={this.state.city}
            onSelectCity={this.selectCity}
            forecastDays={this.state.forecastDays}
          />
          <WeatherForecastList
            forecast={this.state.forecast}
          />
        </Section>
      </div>
    );
  }
});
