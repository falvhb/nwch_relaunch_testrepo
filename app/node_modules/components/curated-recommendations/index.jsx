import React from 'react';
import bem from 'react-bem-helper';

import Wrapper from './wrapper';
import Teaser from 'components/teaser';
import Slider from 'mixins/slider';

const classes = new bem({
  name: 'curated-recommendations',
  prefix: ''
});

const CuratedRecommendations = React.createClass({

  displayName: 'CuratedRecommendations',

  mixins: [Slider],

  propTypes: {
    author: React.PropTypes.string,
    teasers: React.PropTypes.array.isRequired
  },

  getInitialState() {
    return {
      mobile: false,
      loading: true
    };
  },

  componentDidMount() {
    var startingIndex = Math.floor(this.props.teasers.length / 2);
    this.renderFlickity({
      startIndex: startingIndex,
      element: '.init-slider'
    });
  },

  render() {

    var { author, teasers } = this.props;

    var hasMultiple = teasers.length > 1;

    var modifiers = {
      'multiple': hasMultiple,
      ['count-' + teasers.length]: true
    };

    var extraClasses = {
      'is-slider-loading': this.state.loading,
      'is-slider-resizing': this.state.resizing
    };

    return (
      <div {...classes(null, modifiers, extraClasses)}>
        {author ?
          <h3 {...classes('title')}>{author + ' empfiehlt'}</h3>
        :null}
        <div {...classes('grid', null, (hasMultiple ? 'init-slider' : ''))}>
          {teasers.map((teaser, index) =>
            <div {...classes('item')} key={index}>
              <Teaser key={index} {...teaser} modifier='light-boxed' />
            </div>
          )}
        </div>
      </div>
    );
  }

});

export default Wrapper(CuratedRecommendations);
