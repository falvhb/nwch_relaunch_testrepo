@import 'globals';

/**
 * Generic grid element
 */
.grid {
  @include grid-wrap;
}

/**
 * Items or cells - use these to lay out components
 * Separate concerns: only add margin and width / position not appearance
 */
.grid__item {
  @include grid-cell;
}

/**
 * Topic grid
 */
.grid--topic .grid__item {
  @include media('<=500px') {
    width: 100%;
  }

  @include media('>500px', '<=800px') {
    width: (100% / 2);

    &:nth-child(2n+1) {
      clear: left;
    }
  }

  @include media('>800px', '<=desktop-laptop') {
    width: (100% / 3);

    &:nth-child(3n+1) {
      clear: left;
    }
  }

  @include media('>desktop-laptop') {
    width: (100% / 4);

    &:nth-child(4n+1) {
      clear: left;
    }
  }

  @include media('<=800px') {
    margin-bottom: 30px;
  }

  @include media('>800px') {
    margin-bottom: 40px;
  }
}

/**
 * Dossier grid
 */
.grid--ressort .grid__item {
  @include media('<=500px') {
    width: 100%;
  }

  @include media('>500px', '<=800px') {
    &:nth-child(1),
    &:nth-child(4) {
      width: 100%;
    }

    &:nth-child(2),
    &:nth-child(3),
    &:nth-child(n+5) {
      width: (100% / 2);
    }

    &:nth-child(1),
    &:nth-child(2),
    &:nth-child(4),
    &:nth-child(2n+5) {
      clear: left;
    }
  }

  @include media('>800px', '<=desktop-laptop') {
    &:nth-child(1),
    &:nth-child(4) {
      width: (100% / 3) * 2;
    }

    &:nth-child(2),
    &:nth-child(3),
    &:nth-child(n+5) {
      width: (100% / 3);
    }

    &:nth-child(3),
    &:nth-child(3n+5) {
      clear: left;
    }
  }

  @include media('>desktop-laptop') {
    &:nth-child(1),
    &:nth-child(4) {
      width: (100% / 2);
    }

    &:nth-child(2),
    &:nth-child(3),
    &:nth-child(n+5) {
      width: (100% / 4);
    }

    &:nth-child(4),
    &:nth-child(4n+7) {
      clear: left;
    }
  }

  @include media('<=800px') {
    margin-bottom: 30px;
  }

  @include media('>800px') {
    margin-bottom: 40px;
  }
}

/**
 * Dossier grid
 */
.grid--dossier .grid__item {
  @include media('<=500px') {
    width: 100%;
  }

  @include media('>500px', '<=800px') {
    &:nth-child(1) {
      width: 100%;
    }

    &:nth-child(n+2) {
      width: (100% / 2);
    }

    &:nth-child(2n) {
      clear: left;
    }
  }

  @include media('>800px', '<=desktop-laptop') {
    &:nth-child(1) {
      width: (100% / 3) * 2;
    }

    &:nth-child(n+2) {
      width: (100% / 3);
    }

    &:nth-child(3n) {
      clear: left;
    }
  }

  @include media('>desktop-laptop') {
    &:nth-child(1) {
      width: (100% / 2);
    }

    &:nth-child(n+2) {
      width: (100% / 4);
    }

    &:nth-child(4n) {
      clear: left;
    }
  }

  @include media('<=800px') {
    margin-bottom: 30px;
  }

  @include media('>800px') {
    margin-bottom: 40px;
  }
}

/**
 * Next-read grid
 */
.grid--next-read .grid__item {
  margin-bottom: 20px;

  @include media('<=750px') {
    width: 100%;

    &:nth-child(2),
    &:nth-child(3) {
      width: (100% / 2);
    }
  }

  @include media('>750px') {
    &:nth-child(1) {
      width: (100% / 3) * 2;
    }

    &:nth-child(n+2) {
      width: (100% / 3);
    }

    &:nth-child(4) {
      clear: left;
    }
  }
}

/**
 * Three-up-simple grid
 */
.grid--three-up-simple .grid__item {
  margin-bottom: 20px;
  width: 100%;

  @include media('>500px', '<=750px') {
    width: (100% / 2);

    &:nth-child(2n + 1) {
      clear: left;
    }
  }

  @include media('>750px') {
    width: (100% / 3);

    &:nth-child(3n + 1) {
      clear: left;
    }
  }
}

/**
 * Three-up-featured grid
 */
.grid--three-up-featured .grid__item {
  margin-bottom: 20px;
  width: 100%;

  @include media('>500px', '<=750px') {
    width: (100% / 2);

    &:nth-child(1) {
      width: 100%;
    }

    &:nth-child(2n) {
      clear: left;
    }
  }

  @include media('>750px') {
    width: (100% / 3);

    &:nth-child(1) {
      width: (100% / 3) * 2;
    }

    &:nth-child(3n) {
      clear: left;
    }
  }
}

/**
 * Styleguide grid - make grey squares
 */
.grid__placeholder {
  padding-bottom: 20%;
  position: relative;
  background-color: $light-grey;

  &::after {
    content: 'Grid item';
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}
