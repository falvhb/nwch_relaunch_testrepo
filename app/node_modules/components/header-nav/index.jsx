import React from 'react';
import bem from 'react-bem-helper';
import _ from 'lodash';
import Icon from 'components/icon';
import PrimaryNav from 'components/primary-nav';

const classes = new bem({
  name: 'header-nav',
  prefix: ''
});

export default React.createClass({

  displayName: 'HeaderNav',

  propTypes: {
    isClosed: React.PropTypes.bool,
    id: React.PropTypes.number
  },

  getInitialState() {
    return {
      fixed: false,
      slim: false,
      open: true
    };
  },

  lastScroll: 0,

  headerHeight: 150,

  navItems: [
    {
      href: '/',
      label: 'Start'
    },
    {
      href: '/schweiz',
      label: 'Schweiz'
    },
    {
      href: '/ausland',
      label: 'Ausland'
    },
    {
      href: '/wirtschaft',
      label: 'Wirtschaft'
    },
    {
      href: '/sport',
      label: 'Sport'
    },
    {
      href: '/panorama',
      label: 'Panorama'
    },
    {
      href: '/kultur',
      label: 'Kultur'
    },
    {
      href: '/blaulicht',
      label: 'Blaulicht'
    }
  ],

  domainVariations: {
    aaz: {
      href: '/aargau',
      label: 'Aargau',
      logo: 'az_AargauerZeitung.svg',
      logoMobile: 'az_Mobile.svg'
    },
    bz: {
      href: '/basel',
      label: 'Basel',
      logo: 'bz_Basel.svg',
      logoMobile: 'bz_Mobile.svg'
    },
    blz: {
      href: '/basel',
      label: 'Basel',
      logo: 'bz_Basellandschaftliche.svg',
      logoMobile: 'bz_Mobile.svg'
    },
    ot: {
      href: '/solothurn',
      label: 'Solothurn',
      logo: 'ot_OltnerTagblatt.svg',
      logoMobile: 'ot_Mobile.svg'
    },
    gtb: {
      href: '/solothurn',
      label: 'Solothurn',
      logo: 'az_GrenchnerTagblatt.svg',
      logoMobile: 'az_Mobile.svg'
    },
    soz: {
      href: '/solothurn',
      label: 'Solothurn',
      logo: 'az_SolothurnerZeitung.svg',
      logoMobile: 'az_Mobile.svg'
    },
    liz: {
      href: '/limmattal',
      label: 'Limmattal',
      logo: 'az_LimmattalerZeitung.svg',
      logoMobile: 'az_Mobile.svg'
    },
    btb: {
      href: '/aargau',
      label: 'Aargau',
      logo: 'az_BadenerTagblatt.svg',
      logoMobile: 'az_Mobile.svg'
    }
  },

  componentDidMount() {
    this.headerHeight = React.findDOMNode(this.refs.headerNav).offsetHeight;
    // this.containerElement = document.createElement('div');
    // this.containerElement.className = 'header-nav__scroll-navigation header-nav__scroll-navigation--hidden';
    // document.body.appendChild(this.containerElement);
    // this.renderScrollNavigation();
    this.scrollHandler = _.throttle(this.checkScrollPosition, 150);
    document.addEventListener('scroll', this.scrollHandler);
  },

  // toggleNavigation() {
  //   this.setState({ isHidden: !this.state.isHidden });
  // },

  fixNavigation() {
    this.setState({ fixed: true });
  },

  unfixNavigation() {
    this.setState({ fixed: false });
  },

  slimNavigation() {
    this.setState({ slim: true });
  },

  unslimNavigation() {
    this.setState({ slim: false });
  },

  checkScrollPosition() {
    // absolute nav when we're at the top, or are scrolling down and the nav is fixed
    if (window.scrollY <= 0 || window.scrollY > this.lastScroll && this.state.fixed) {
      this.unfixNavigation();
    }

    // if we are scrolling below the header
    if (window.scrollY > this.headerHeight) {
      this.slimNavigation();
      // if scrolling back up, fix the nav
      if (window.scrollY < this.lastScroll && !this.state.fixed) {
        this.fixNavigation();
      }
    } else {
      // otherwise, always show full nav
      this.unslimNavigation();
    }

    // update the last scroll position
    this.lastScroll = window.scrollY;
  },

  // toggleScrollNavigation() {
  //   var isScrollNavHidden = ! this.state.isScrollNavHidden;
  //   this.setState({ isScrollNavHidden });
  //   this.containerElement.className = isScrollNavHidden
  //     ? 'header-nav__scroll-navigation header-nav__scroll-navigation--hidden'
  //     : 'header-nav__scroll-navigation';
  // },

  // toggleScrollSubNavigation() {
  //   this.setState({ isScrollSubNavHidden: !this.state.isScrollSubNavHidden });
  //   setTimeout(() => this.renderScrollNavigation());
  // },

  mappedNavItems(items) {
    let { skin } = this.props;
    if (skin in this.domainVariations) {
      items.splice(1, 0, {
        href: this.domainVariations[skin].href,
        label: this.domainVariations[skin].label
      });
    }
    return items;
  },

  getActiveSection(path) {
    let segments = path.match(/\/(\w|-)+/g);
    return segments.length > 2 ? segments[0] : '/';
  },

  getLogoSource(type) {
    return '/__node__/__static__/client/images/logos/' + this.domainVariations[this.props.skin][type];
  },

  // renderScrollNavigation() {
  //   const { path } = this.props;
  //   const navItems = this.navItems.slice();

  //   var content = (
  //     <div>
  //       <div className="header-nav__scroll-main">
  //         <div className="header-nav__container">
  //           <a className="header-nav__scroll-logo" href="/" title="Startseite">
  //             <img src={this.getLogoSource('logoMobile')} />
  //           </a>
  //           <button onClick={this.toggleScrollSubNavigation} className="header-nav__scroll-menu-button">
  //             <img
  //               className={this.state.isScrollSubNavHidden
  //                 ? 'header-nav__scroll-menu-icon header-nav__scroll-menu-icon--menu'
  //                 : 'header-nav__scroll-menu-icon header-nav__scroll-menu-icon--close'
  //               }
  //               src={this.state.isScrollSubNavHidden
  //                 ? "/__node__/__static__/client/images/icons/menu.svg"
  //                 : "/__node__/__static__/client/images/icons/close.svg"
  //               } />
  //               <span>Menu</span>
  //           </button>
  //         </div>
  //       </div>
  //       <div className={"header-nav__scroll-links "+(this.state.isScrollSubNavHidden ? ' header-nav__scroll-links--hidden' : '')}>
  //         <div className={"header-nav__container"+(this.state.isHidden ? ' header-nav--hidden' : '')}>
  //           <PrimaryNav items={this.mappedNavItems(navItems)} active={this.getActiveSection(path)} />
  //         </div>
  //       </div>
  //     </div>
  //   );

  //   React.render(content, this.containerElement);
  // },

  render() {
    const { path } = this.props;
    const { fixed, slim, mobile } = this.state;
    const navItems = this.navItems.slice();

    let toggleClasses = {
      'is-fixed': fixed,
      'is-slim': slim
    };

    return (
      <header {...classes(null, 'main', toggleClasses)} ref='headerNav'>
        <div {...classes('brand')}>
          <div {...classes('container')}>
            {slim || mobile
              ? <button {...classes('menu-button')} onClick={this.toggleNavigation}>
                  {this.state.open
                    ? <Icon id="close"/>
                    : <Icon id="menu"/>
                  }
                </button>
            :null}
            <a href="/" title="Startseite" {...classes('logo', [slim || mobile ? 'slim' : 'regular'])}>
              <img src={this.getLogoSource('logo')} />
            </a>
          </div>
        </div>
        <div {...classes('navigation', null, [this.state.open ? 'is-open' : 'is-closed'])}>
          <PrimaryNav items={this.mappedNavItems(navItems)} active={this.getActiveSection(path)} />
        </div>
      </header>
    );
  }

});
