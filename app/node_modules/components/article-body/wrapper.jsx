import React from 'react';
import _ from 'lodash';

// import CuratedRecommendations from 'components/curated-recommendations';
// import RawContent from 'components/raw-content';

export default Component => React.createClass({

  displayName: 'ArticleBodyWrapper',

  propTypes: {
    author: React.PropTypes.string,
    text: React.PropTypes.string.isRequired,
    enrichments: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,
    related: React.PropTypes.arrayOf(React.PropTypes.object)
  },

  markers: {
    related: '${{empfehlung}}',
    enrichment: '${{stoerer}}'
  },

  mapBodyContent(props) {
    let mappedContent = [];
    const apiTextBody = props.text;
    const containsRelated = _.includes(apiTextBody, this.markers.related);
    const containsEnrichments = _.includes(apiTextBody, this.markers.enrichment);

    // return the default API text if no related / enrichments
    if (!containsRelated && !containsEnrichments) {

      let module = {
        type: "text",
        data: apiTextBody
      };

      mappedContent.push(module);

      return mappedContent;
    }
  },

  mappedData(props) {
    return {
      content: this.mapBodyContent(props)
    };
  },

  render() {
    return (
      <Component {...this.mappedData(this.props)} />
    );
  }

});
