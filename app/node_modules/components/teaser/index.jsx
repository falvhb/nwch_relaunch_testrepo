import React from 'react';
import bem from 'react-bem-helper';

import ResponsiveImage from 'components/responsive-image';
import DateFormatter from 'components/date-formatter';

const classes = new bem({
  name: 'teaser',
  prefix: ''
});

export default React.createClass({

  displayName: 'Teaser',

  propTypes: {
    title: React.PropTypes.string.isRequired,
    catchword: React.PropTypes.string.isRequired,
    supplementary: React.PropTypes.string,
    url: React.PropTypes.string,
    asset: React.PropTypes.object
  },

  getDefaultProps() {
    return {
      modifier: 'basic',
      theme: 'default'
    };
  },

  render() {
    var props = this.props;

    var modifiers = [this.props.modifier];
    var isSupplementaryDate = this.props.modifier !== 'listed';
    var dateFormat = ['inlined-left', 'inlined-right'].indexOf(this.props.modifier) > -1
        ? 'short'
        : 'long';

    if (this.props.modifier === 'promoted') {
      modifiers.push(props.theme);
    }

    var ratios = {
      'large': '16x9',
      'basic': '16x9',
      'promoted': '9x10',
      'inlined-right': '1x1',
      'inlined-left': '1x1'
    };

    var sizes = {
      'large': 'max',
      'basic': 'narrow',
      'promoted': '9x10',
      'inlined-right': 'tiny',
      'inlined-left': 'tiny'
    };

    var ratio = ratios[this.props.modifier];
    var size = sizes[this.props.modifier];

    return (
      <article {...classes(null, props.modifier)} itemScope itemType='http://schema.org/Article'>
        <a {...classes('inner')} href={props.url}>
          {props.asset
            ? <div {...classes('image')}>
                <ResponsiveImage
                  ratio={ratio}
                  size={size}
                  alt={props.asset.description ? props.asset.description : ''}
                  title={props.asset.title ? props.asset.title : ''}
                  src={props.asset.image_url}
                  defer={true} />
              </div>
            : ''}
          <footer {...classes('footer')}>
            <p {...classes('catchword')}>{props.catchword}</p>
            <h1 {...classes('title')} itemProp='name'>{props.title}</h1>
            {props.supplementary
              ? isSupplementaryDate
                ? <p {...classes('supplementary')}><DateFormatter publicationDate={props.supplementary} format={dateFormat} /></p>
                : <p {...classes('supplementary')}>{props.supplementary}</p>
              : ''}
          </footer>
        </a>
      </article>
    );
  }

});
