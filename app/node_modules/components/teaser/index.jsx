import React from 'react';
import bem from 'react-bem-helper';

import TeaserTitle from 'components/teaser-title';
import TeaserImage from 'components/teaser-image';
import TeaserByline from 'components/teaser-byline';
import Schema from 'components/schema';

const classes = new bem({
  name: 'teaser',
  prefix: ''
});

export default React.createClass({

  displayName: 'Teaser',

  propTypes: {
    variation: React.PropTypes.string.isRequired,
    theme: React.PropTypes.object.isRequired,
    title: React.PropTypes.object.isRequired,
    link: React.PropTypes.string.isRequired,
    catchword: React.PropTypes.object,
    summary: React.PropTypes.oneOfType([
      React.PropTypes.object,
      React.PropTypes.bool
    ]),
    byline: React.PropTypes.object,
    image: React.PropTypes.object,
    marker: React.PropTypes.object,
    schema: React.PropTypes.object
  },

  getDefaultProps() {
    return {
      variation: 'basic',
      theme: {
        modifiers: ['theme-article']
      },
      schema: {}
    };
  },

  render() {

    let { variation, theme, title, link, catchword, summary, byline, image, marker, schema } = this.props;

    let modifiers = [variation].concat(theme.modifiers);

    return (
      <article {...classes(null, modifiers)} itemScope itemType='http://schema.org/Article'>
        <a {...classes('link')} href={link} itemProp='url'>

          <TeaserImage image={image} marker={marker} modifiers={modifiers} />

          <footer {...classes('footer')}>
            {catchword && catchword.showing
              ? <p {...classes('catchword')}>{catchword.text}</p>
            :null}

            <TeaserTitle {...title} modifiers={modifiers} />

            <Schema items={schema} />

            <TeaserByline {...byline} modifiers={modifiers} />

            {summary && summary.showing
              ? <p {...classes('summary')}>{summary.text}</p>
            :null}
          </footer>

        </a>
      </article>

    );
  }

});
