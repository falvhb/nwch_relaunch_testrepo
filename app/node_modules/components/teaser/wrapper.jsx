import React from 'react';
import _ from 'lodash';

import { getViewportWidth } from 'helpers';

export default Component =>  React.createClass({

  displayName: 'TeaserWrapper',

  breakpoint: 500,

  resizeEvent: null,

  propTypes: {
    modifier: React.PropTypes.string,
    theme: React.PropTypes.string,
    title: React.PropTypes.string.isRequired,
    catchword: React.PropTypes.string,
    link: React.PropTypes.string,
    image: React.PropTypes.object,
    dateFormat: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.bool
    ]),
    supplementary: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.bool
    ])
  },

  getInitialState() {
    return {
      view: 'desktop'
    };
  },

  getDefaultProps() {
    return {
      modifier: 'basic',
      theme: 'default',
      schema: {}
    };
  },

  handleResize() {
    this.setState({
      view: getViewportWidth <= this.breakpoint
        ? 'mobile'
        : 'desktop'
    });
  },

  componentDidMount() {
    this.handleResize();
    this.resizeEvent = _.debounce(this.handleResize, 250);
    window.addEventListener('resize', this.resizeEvent);
  },

  componentWillUnmount() {
    window.removeEventListener('resize', this.resizeEvent);
  },

  mappedData(props) {
    return props;
  },

  render() {
    return (
      <Component {...this.mappedData(this.props)} />
    );
  }
});
