@import 'globals';

/**
 * A teaser is a preview of an article, usually in the form of a small box 
 * containing some information about the related article, such as the title, the
 * category and the date. These data depend on the usage of the teaser and are 
 * not always the same. For this reason, we do not have element classes such as
 * `.teaser__date`, but only `.teaser__primary`, `.teaser__secondary` and 
 * `.teaser__tertiary`. This gives us the opportunity to be completely content-
 * agnostic and stuff pretty much any data we want in a teaser.
 *
 * There are 6 different variations of this component:
 * - `basic`: the basic one containing a picture, primary, secondary and 
 * tertiary content. 
 * - `light`: a variation with an image, but with a top border instead.
 * - `light-boxed`: like `light` variation except it sits on a light-grey
 * background, giving an idea of *boxed* content.
 * - `inlined`: a variation with the image floated on the side, perfect for list
 * representations.
 * - `large`: a large variation where the content sits on top of the image, 
 * layered with a transparent black background for readibility.
 * - `promoted`: a large variation that can be themed, perfect for home pages 
 and heavily promoted teasers.
 * 
 * All styles shared to all variations are applied to the `.teaser` class and 
 * its elements. Anything specific to a teaser variation is applied using the 
 * modifier class of the relevant variation (e.g. `.teaser--large`).
 */

/**
 * Inner wrapp for the teaser
 */
.teaser__inner {
  position: relative;
}

/**
 * Teaser image (if any)
 */
.teaser__image {
  margin-bottom: $container-spacing;
}

/**
 * Teaser primary content (usually the article title)
 */
.teaser__primary {
  @include type-copy;
  font-weight: 700;
  margin-bottom: ($container-spacing / 2);
}

/**
 * Teaser secondary content (usually the date but not necessarily)
 */
.teaser__secondary {
  @include type-detail;
}

/**
 * Teaser tertiary content (usually the spitzmarke)
 */
.teaser__tertiary {
  @include type-tiny-header;
  margin-bottom: ($container-spacing / 2);
}


// -----------------------------------------------------------------------------
// Light (no image) variations
// The `light` modifier is a variation without an image
// The `light-boxed` modifier is a variation without an image but with a grey
// background.
// -----------------------------------------------------------------------------

/**
 * Add a top border on the inner element
 */
.teaser--light .teaser__inner,
.teaser--light-boxed .teaser__inner {
  border-top: 4px solid $blue;
}

/**
 * Add a background and padding for the light-boxed version
 */
.teaser--light-boxed {
  background: $very-light-grey;
  padding: ($container-spacing);
  padding-top: 0;
}


// -----------------------------------------------------------------------------
// Inlined variation
// -----------------------------------------------------------------------------

/**
 * Image for the inlined version
 * 1. Magic number, should probably be more robust
 * 2. Could possible be floated on the left
 */
.teaser--inlined .teaser__image {
  width: 25%; /* 1 */
  float: right; /* 2 */
}

/**
 * Slightly reduce the font-size of the primary content
 */
.teaser--inlined .teaser__primary {
  font-size: 0.9em;
}


// -----------------------------------------------------------------------------
// Large variation
// -----------------------------------------------------------------------------

/**
 * Remove the bottom margin of the image for the large variation
 */
.teaser--large .teaser__image {
  margin: 0;
}

/**
 * Add a top transparent black layer to be able to read text on top of image
 * 1. Stretching
 * 2. On top of image
 */
.teaser--large .teaser__image::before {
  content: '';
  position: absolute; /* 1 */
  top: 0; /* 1 */
  right: 0; /* 1 */
  bottom: 0; /* 1 */
  left: 0; /* 1 */
  z-index: 3; /* 2 */
  background: linear-gradient(to bottom, transparent, black);
}

/**
 * Teaser footer
 * 1. Overlapping image, from the bottom
 * 2. On top of image + transparent layer
 */
.teaser--large .teaser__footer {
  position: absolute; /* 1 */
  bottom: 0; /* 1 */
  left: 0; /* 1 */
  z-index: 4; /* 2 */
  color: white;
  padding: $container-spacing;
}

/**
 * Inline the primary and secondary content so there is no line break between
 * them
 */
.teaser--large .teaser__primary,
.teaser--large .teaser__secondary {
  display: inline;
  margin: 0;
}

/**
 * Add a gap between the primary and secondary inlined content
 */
.teaser--large .teaser__secondary {
  margin-left: ($container-spacing / 2);
}


// -----------------------------------------------------------------------------
// Promoted variation
// -----------------------------------------------------------------------------

/**
 * Promoted variation
 * 1. Background color is defined from the color, which is defined from the 
 * theme, which is passed as a modifier (@TODO: improve)
 * 2. No color specific to inherit from current color
 * 3. Temporary default value
 */
.teaser--promoted {
  background: currentcolor; /* 1 */
  border-top: 4px solid; /* 2 */
  border-bottom: 4px solid; /* 2 */
  color: $orange; /* 3 */
}

/**
 * Clear inner floats
 */
.teaser--promoted .teaser__inner {
  overflow: hidden;
}

/**
 * Image from promoted teaser
 * 1. Remove the bottom margin of the image for the large variation
 * 2. Left floated
 * 3. Half the width
 */
.teaser--promoted .teaser__image {
  margin-bottom: 0; /* 1 */
  float: left; /* 2 */
  width: 50%; /* 3 */
}

/**
 * Footer from promoted teaser
 * 1. Prevent text from sticking to the edges
 * 2. Flexbox used to align content from the bottom
 * 3. Absolutely positioned to stretch to full height
 * 4. Depending on the theme, might be harmful
 */
.teaser--promoted .teaser__footer {
  padding: ($container-spacing * 1.5) ($container-spacing * 2); /* 1 */
  display: flex; /* 2 */
  flex-direction: column; /* 2 */
  justify-content: flex-end; /* 2 */
  position: absolute; /* 3 */
  top: 0; /* 3 */
  left: 50%; /* 3 */
  right: 0; /* 3 */
  bottom: 0; /* 3 */
  color: white; /* 4 */
}

/**
 * Make footer content inherit from footer color
 */
.teaser--promoted .teaser__primary,
.teaser--promoted .teaser__secondary,
.teaser--promoted .teaser__tertiary {
  color: inherit;
}

/**
 * Make the primary content looks like an actual title
 */
.teaser--promoted .teaser__primary {
  @include type-h2;
}

/**
 * Put the tertiary content at the very top of the container
 */
.teaser--promoted .teaser__tertiary {
  position: absolute;
  top: ($container-spacing * 1.5);
}

