/* eslint-disable no-unused-expressions */

import _ from 'lodash';
import slot from 'components/ressort-header/slot';
import state from 'utils/data/master-ressort';

import { expect } from 'chai';

describe('RessortHeader', function() {

  describe('slot', function() {

    let fixture;

    beforeEach(function() {
      fixture = slot.data(state);
    });

    it('does not set iso rendering', function() {
      expect(slot.iso).to.be.false;
    });

    it('returns data', function() {
      expect(fixture).to.be.an('object');
    });

    it('data has a ressort title', function() {
      expect(fixture.title).to.be.a('string');
    });

    it('data has a main ressort', function() {
      expect(fixture.ressort).to.be.an('object');
    });

    it('containing a urlpart / title', function() {
      expect(_.has(fixture.ressort, 'urlpart')).to.be.true;
      expect(_.has(fixture.ressort, 'title')).to.be.true;
    });

    it('data has a subressort slug', function() {
      expect(fixture.subressortSlug).to.be.a('string');
    });

    it('data has a navigation', function() {
      expect(fixture.navigation).to.be.an('array');
    });

    it('with the correct number of items', function() {
      expect(fixture.navigation.length).to.equal(9);
    });

    it('containing a title / slug', function() {
      let subressort = _.first(fixture.navigation);
      expect(_.has(subressort, 'title')).to.be.true;
      expect(_.has(subressort, 'slug')).to.be.true;
    });

  });

});
