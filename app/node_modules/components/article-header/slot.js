var getSource = require('helpers/asset/get-source');
var helpers = require('helpers');
import { get } from 'lodash/object'

var parsedArticle = function(article) {
  return {
    catchword: article.context_label,
    title: article.title,
    author: article.author,
    source: getSource(article.source),
    published: article.dc.effective,
    modified: article.dc.modified,
    banner: getBanner(article)
  };
};

var parsedData = function(state) {
  return parsedArticle(state.article);
};

function getBannerType(article) {
  if (article.sponsor) {
    return 'sponsored';
  } else if (article.content_type === 'ugcnewsarticle') {
    return article.content_type
  }

  return false;
}


function getBanner(article) {
  var bannerType = getBannerType(article);
  var icon = 'megaphone';

  if (!bannerType) {
    return null;
  }

  return {
    icon: icon,
    modifier: bannerType,
    blocks: blocksForBannerType(bannerType, article)
  }
}

function blocksForBannerType (bannerType, article) {

  function authorBlock(article, text) {
    var author = get(article, 'author_detail.user');

    if (!author.firstname) {
      return {};
    }

    return {
      "text": text,
      "linkText": [author.firstname, author.lastname].join(' '),
      "image": author.image_url,
      "itemProp": "author"
    }
  }

  function sponsorBlock(article) {
    var sponsor = get(article, 'sponsor', {});

    if (!sponsor.text) {
      return {}
    }

    return {
      "text": sponsor.text,
      "link": sponsor.url,
      "linkText": sponsor.title,
      "image": sponsor.image.image_url,
      "imageRounded": false
    }
  }

  function clubBlock(article) {
    return {
    }
  }

  function cityBlock(article, text) {
    var author = get(article, 'author_detail.user');

    if (!author.firstname) {
      return {};
    }

    return {
      "text": text,
      "linkText": [author.firstname, author.lastname].join(' '),
      "image": author.image_url,
      "itemProp": "author"
    }
  }

  switch (bannerType) {
    case 'leserbeitrag':
      return [
        authorBlock(article, 'Leserbeitrag von'),
        cityBlock(article, 'aus')
      ]
    case 'gemeindebeitrag':
      return [
        cityBlock(article, 'Gemeindebeitrag aus'),
        authorBlock(article, 'von'),
      ]
    case 'vereinsmeldung':
    case 'sportverein':
      return [
        clubBlock(article),
        authorBlock(article)
      ]
    case 'sponsor':
      return [
        sponsorBlock(article)
      ]
  }
}

module.exports = {
  iso: false,
  data: parsedData
};

