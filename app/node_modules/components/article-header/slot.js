var getSource = require('helpers/asset/get-source');
var _ = require('lodash');
var goldbachImageSource = require('helpers/image/goldbach-image-source');
var SPONSORED = 'sponsored';

function squareImage(src) {
  return goldbachImageSource({
    width: 70,
    height: 70,
    fill: true,
    src: src
  });
}

var parsedArticle = function(article) {
  // For ugc (and not sponsors) we need to hide the source
  var shouldShowSource = article.content_type !== 'ugcnewsarticle';

  return {
    catchword: article.context_label,
    title: article.title,
    author: shouldShowSource ? article.author : null,
    source: shouldShowSource ? getSource(article.source) : null,
    published: article.dc.effective,
    modified: article.dc.modified,
    banner: getBanner(article)
  };
};

var parsedData = function(state) {
  return parsedArticle(state.article);
};

function getBannerType(article) {
  if (_.get(article, 'sponsor.text')) {
    return SPONSORED;
  } else if (article.content_type === 'ugcnewsarticle') {
    return article.labeltype || _.get(article, 'ressorts.0.urlpart');
  }

  return false;
}

function getBanner(article) {
  var bannerType = getBannerType(article);
  var icon = 'megaphone';

  if (!bannerType) {
    return null;
  }

  return {
    icon: icon,
    modifier: bannerType,
    blocks: _.compact(blocksForBannerType(bannerType, article))
  };
}

function blocksForBannerType (bannerType, article) {
  function authorBlock (data, text) {
    var author = _.get(data, 'owner') || {};

    if (!author.firstname) {
      return null;
    }

    return {
      "text": text,
      "linkText": [author.firstname, author.lastname].join(' '),
      "image": author.image_url ? squareImage(author.image_url) : null,
      "itemProp": "author"
    };
  }

  function sponsorBlock(data) {
    var sponsor = _.get(data, 'sponsor', {});

    if (!sponsor.text) {
      return null;
    }

    return {
      "text": sponsor.text,
      "link": sponsor.url,
      "linkText": sponsor.title,
      "image": sponsor.image.image_url,
      "imageRounded": false
    };
  }

  function clubBlock(data, type) {
    var club = _.get(data, 'for_content') || {};
    var text = type === 'sportverein' ? 'Sportvereinsmeldung' : _.capitalize(type);

    if (!club.title) {
      return null;
    }

    return {
      "text": text + ' zu',
      "linkText": club.title,
      "image": _.get(club, 'logo.image_url'),
      "itemProp": 'about',
      "imageRounded": false
    };
  }

  function cityBlock(data, text) {
    var city = _.get(article, 'cities.0', {});

    if (!city.name) {
      return null;
    }

    return {
      "text": text,
      "linkText": city.name,
      "link": '/gemeinde/' + city.urlpart,
      "image": '/static/az/img/Flaggen/gemeinde/' + city.id + '.png',
      "itemProp": "contentLocation",
      "imageRounded": false
    };
  }

  switch (bannerType) {
    case 'leserbeitrag':
      return [
        authorBlock(article, 'Leserbeitrag von'),
        cityBlock(article, 'aus')
      ];
    case 'gemeindebeitrag':
      return [
        cityBlock(article, 'Gemeindebeitrag aus'),
        authorBlock(article, 'von'),
      ];
    case 'vereinsmeldung':
    case 'sportverein':
      return [
        clubBlock(article, bannerType),
        authorBlock(article, 'von')
      ];
    case SPONSORED:
      return [
        sponsorBlock(article)
      ];
  }
}

module.exports = {
  iso: false,
  data: parsedData
};

