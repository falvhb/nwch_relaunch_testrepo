import React from 'react';
import bem from 'react-bem-helper';

import Container from 'components/container';
import DateFormatter from 'components/date-formatter';
import ArticleByline from 'components/article-byline';
import UGCHeader from 'components/user-content-header';

const classes = new bem({
  name: 'article-header',
  prefix: ''
});

export default React.createClass({

  displayName: 'ArticleHeader',

  propTypes: {
    catchword: React.PropTypes.string.isRequired,
    title: React.PropTypes.string.isRequired,
    author: React.PropTypes.string,
    source: React.PropTypes.string,
    published: React.PropTypes.string.isRequired,
    modified: React.PropTypes.string,
    banner: React.PropTypes.object
  },

  render() {
    var { catchword, title, author, source, published, modified, banner } = this.props;

    return (
      <Container>
        <header {...classes()}>
          <p itemProp='genre' {...classes('catchword', null, 'type-catchword')}>{catchword}</p>
          <h1 itemProp="headline" {...classes('title', null, 'type-h1')}>{title}</h1>
          <div {...classes('meta', null, 'type-detail')}>
            <ArticleByline source={source} author={author} />
            <p {...classes('date')}>
              <meta itemProp='datePublished' content={published} />
              {modified ?
                <meta itemProp='dateModified' content={modified} />
              :null}
              <DateFormatter
                publicationDate={published}
                modificationDate={modified}
              />
            </p>
          </div>
        </header>
        <UGCHeader {...banner } />
      </Container>
    );
  }

});
