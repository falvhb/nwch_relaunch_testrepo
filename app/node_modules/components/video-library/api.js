/* eslint-disable no-console */
var KalturaAPI = require('helpers/video/kaltura-api.jsx');
var extractSource = require('helpers/video/extract-source.jsx');
var _ = require('lodash');


var loadVideos = function(req) {
  var variation = _.get(req.params, 'variation', '');
  var searchText = '';
  var videos = {};

  // If we have a variation other than `all` it has to be an id of a video.
  // If we have a video specified we must load the video's data only.
  // This can be accomplished by using the id as the search term (`freeText`).
  if (variation !== 'all') {

    // use the id as the search term
    searchText = variation;

    videos.searchText = searchText;
  }

  var kaltura = new KalturaAPI({
    ssl: false,
    service: 'baseEntry',
    action: 'list',
    format: 1,
    orderByKey: 'createdAt',
    orderDescending: true,
    pageIndex: 1,
    pageSize: 12,
    filters: {
      mediaTypeEqual: 1,
      freeText: searchText,
      categoriesIdsMatchAnd: _.get(req.api.get('domain'), 'data.properties.kaltura_mediathek_category_id', '')
    },
    ks: _.get(req.api.get('kaltura'), 'kalturaSession', '')
  });

  req.api.startExternalApiCall('videos');

  kaltura.getData().then(function(response) {
    videos.initialVideos = response.data.objects;
    videos.initialTotalCount = response.data.totalCount;
    if (req.params.variation && req.params.variation !== 'all') {
      videos.initialSelectedVideo = req.params.variation;
    }
    // tell the api that one request has been successfully completed
    req.api.endExternalApiCall('videos', videos);
  }).catch(function() {
    console.error('KalturaAPI Error: Could not load videos from Kaltura: ', kaltura.getURL(), ' in ', __filename);

    // tell the api that one request has been successfully completed
    req.api.endExternalApiCall();
  });
};

var loadSource = function(req) {

  // load metadata and extract source
  if (req.params.variation && req.params.variation !== 'all') {

    // tell the api that one more async request goes in line
    req.api.startExternalApiCall('initialVideoSource');

    var kaltura = new KalturaAPI({
      ssl: false,
      service: 'metadata_metadata',
      action: 'list',
      format: 1,
      filters: {
        objectIdEqual: req.params.variation
      },
      ks: _.get(req.api.get('kaltura'), 'kalturaSession', '')
    });

    kaltura.getData().then(function(response) {
      // tell the api that the request has been completed
      req.api.endExternalApiCall('initialVideoSource',
                                 extractSource(response));
    }).catch(function() {
      console.error('KalturaAPI Error: Could not load source from Kaltura: ', kaltura.getURL(), ' in ', __filename);

      // tell the api that one request has beend completed
      req.api.endExternalApiCall();
    });
  }
};

module.exports = function(req) {
  loadVideos(req);
  loadSource(req);
  // signal that we need to wait for the API to finish the request
  return true;
};
