import React from 'react';

export default React.createClass({

  displayName: 'Expandable',

  propTypes: {
    expanded: React.PropTypes.bool.isRequired,
    initialHeight: React.PropTypes.number
  },

  getDefaultProps() {
    return {
      initialHeight: 0
    };
  },

  getInitialState() {
    return {
      height: this.props.initialHeight
    };
  },

  componentWillUpdate() {
    console.info('expandable will update..');
  },

  componentDidUpdate() {
    this.resetHeight();
  },

  resetHeight() {
    if (!this.props.expanded) {
      // reset to start value
      this.setState({
        height: this.props.initialHeight
      });
    }
  },

  setExpanderHeight(height) {
    // console.info('------setExpanderHeight----', Math.round(this.props.initialHeight + height));
    if (this.props.expanded) {
      // do not directly set style attributes. Instead use a state and set style in render method.
      this.setState({
        height: Math.round(this.props.initialHeight + height)
      });
    }
  },

  // pass on properties to children by cloning react child element
  renderChildren() {
    return React.Children.map(this.props.children, (child) => {
      return React.cloneElement(child, {
        onSetExpandableHeight: this.setExpandableHeight
      });
    });
  },


  render() {
    var isExpanded = this.props.expanded ? ' is-expanded' : '';
    var className = 'expandable expandable-grid' + isExpanded;

    return (
      <div
        {...this.props}
        className={className}
        ref="expandable"
        style={{height: this.state.height + 'px'}}
      >
        {this.renderChildren()}
      </div>
    );
  }
});
