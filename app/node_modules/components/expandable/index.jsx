import React from 'react';

export default React.createClass({

  displayName: 'Expandable',

  propTypes: {
    expandableHeight: React.PropTypes.number.isRequired
  },

  componentDidUpdate() {
    this.resetHeight();
  },

  resetHeight() {
    var expandable = React.findDOMNode(this.refs.expandable);
    if (!this.props.expanded) {
      // reset to start value
      expandable.style.height = '';
    }
  },

  setExpanderHeight(height) {
    var expandable = React.findDOMNode(this.refs.expandable);
    if (this.props.expanded) {
      expandable.style.height = this.props.expandableHeight + height + 'px';
    }
  },

  render() {
    var isExpanded = this.props.expanded ? ' is-expanded' : '';
    var className = 'expandable' + isExpanded;

    // @TODO:@Richard: I want to inherit props to children (e.g. expander). How is it done best here?
    // React throws a warning "Don't set .props.onSetExpanderHeight of the React component"
    this.props.children.props.onSetExpanderHeight = this.setExpanderHeight;

    return (
      <div className={className} ref="expandable" {...this.props}>
        {this.props.children}
      </div>
    );
  }

});
