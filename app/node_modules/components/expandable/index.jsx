import React from 'react';

export default React.createClass({

  displayName: 'Expandable',

  propTypes: {
    expandableHeight: React.PropTypes.number.isRequired,
    expanded: React.PropTypes.bool.isRequired
  },

  componentDidUpdate() {
    this.resetHeight();
  },

  resetHeight() {
    var expandable = React.findDOMNode(this.refs.expandable);
    if (!this.props.expanded) {
      // reset to start value
      expandable.style.height = '';
    }
  },

  setExpandableHeight(expanderHeight) {
    var expandable = React.findDOMNode(this.refs.expandable);
    if (this.props.expanded) {
      expandable.style.height = this.props.expandableHeight + expanderHeight + 'px';
    }
  },

  // pass on properties to children by cloning react child element
  renderChildren() {
    return React.Children.map(this.props.children, (child) => {
      return React.cloneElement(child, {
        onSetExpandableHeight: this.setExpandableHeight
      });
    });
  },

  render() {
    var isExpanded = this.props.expanded ? ' is-expanded' : '';
    var className = 'expandable expandable-grid' + isExpanded;

    return (
      <div
        {...this.props}
        className={className}
        ref="expandable"
      >
        {this.renderChildren()}
      </div>
    );
  }
});
