/* eslint-disable no-unused-expressions */

import slot from 'components/article-detail/slot';
import state from 'utils/data/master-article';

import { expect } from 'chai';

describe('ArticleDetail', function() {

  describe('slot', function() {

    let fixture;

    beforeEach(function() {
      fixture = slot.data(state);
    });

    it('sets iso rendering', function() {
      expect(slot.iso).to.be.true;
    });

    it('returns data', function() {
      expect(fixture).to.be.an('object');
    });

    it('data contains ad keywords', function() {
      expect(fixture.adKeywords).to.be.an('array');
      expect(fixture.adKeywords).to.equal(state.article.ad_keywords);
    });

    it('data contains body object', function() {
      expect(fixture.body).to.be.an('object');
    });

    it('body object contains author, text, enrichments and related articles', function() {
      expect(fixture.body.author).to.equal(state.article.author);
      expect(fixture.body.text).to.equal(state.article.text);
      expect(fixture.body.enrichments).to.equal(state.article.stoerer);
      expect(fixture.body.related).to.equal(state.article.related);
    });

    it('data contains commentable flag', function() {
      expect(fixture.commentable).to.equal(true || false);
    });

    it('data contains social buttons', function() {
      expect(fixture.socialButtons).to.be.an('object');
    });

    it('social buttons contain tite / description', function() {
      expect(fixture.socialButtons.title).to.equal(state.article.title);
      expect(fixture.socialButtons.description).to.equal(state.article.lead);
    });

    it('data contains tags', function() {
      expect(fixture.tags).to.be.an('array');
      expect(fixture.tags).to.equal(state.article.keywords);
    });

  });

});
