/*eslint-disable no-alert, no-console */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import { expect } from 'chai';

import PlayTime from 'components/play-time';
import data from 'components/play-time/.data';

// TEMP
const Dummy = React.createClass({
  render() {
    return (
      <div>{this.data.duration}</div>
    );
  }
});


describe('Play Time', function() {
  var playTime;

  beforeEach(function() {
    // temp: log error to console (for debugging when running tests in Chrome)
    try {
      // @TODO:@Richard: Why do I get an error here?
      // playTime  = React.renderToString(React.createElement(PlayTime, data));
      playTime = TestUtils.renderIntoDocument(
        <PlayTime {...data} />
      );
      console.log('---------playTime:', playTime);
    } catch(error) {
      console.log('Error: ', error);
    }
  });

  describe('renders', function() {

    // Debugging only
    it('Dummy component displaying duration 159', () => {
      playTime = React.renderToString(React.createElement(Dummy, data));
      // console.log('playTime(1): ', playTime);
      expect(playTime).to.contain('159');
    });

    it('a time in format mm:ss', () => {
      expect('<div> 02:39 </div>').to.match(/[0-9]{2}:[0-9]{2}/);
    });

    it('159s as 02:39', () => {
      expect(playTime).to.contain('02:39');
    });

    it('a duration according to schema.org', () => {
      expect(playTime).to.match(/content="[0-9]{2}:[0-9]{2}:[0-9]{2}"/);
    });

    it('a wrapping element with class "play-time"', () => {
      expect(playTime).to.match(/class="play-time"/);
    });

    // @TODO:@Richard: Best practices here?
    it('an icon tag', () => {
      expect(playTime).to.match(/><[^>]>[0-9]{2}:[0-9]{2}/);
    });

  });
});
