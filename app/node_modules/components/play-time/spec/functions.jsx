/*eslint-disable no-unused-vars, no-alert, no-console */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;

import PlayTime from 'components/play-time';
import data from 'components/play-time/.data';

import { expect } from 'chai';

describe('Play Time', function() {
  var playTime;

  beforeEach(function() {
    playTime = TestUtils.renderIntoDocument(
      <PlayTime {...data} />
    );
  });

  describe('takes a duration in seconds', function() {
    it('and returns a time in format mm:ss for a duration less than an hour', () => {
      expect(playTime.getFormattedTime(99)).to.equal('01:39');
    });

    it('and returns an empty string if duration is zero', () => {
      expect(playTime.getFormattedTime(0)).to.equal('');
    });

    it('and returns an empty string if duration is not set', () => {
      expect(playTime.getFormattedTime()).to.equal('');
    });

    it('and returns a time in format hh:mm:ss for a duration is exactly an hour', () => {
      expect(playTime.getFormattedTime(3600)).to.equal('01:00:00');
    });

    it('and returns a time in format hh:mm:ss for a duration larger than an hour', () => {
      expect(playTime.getFormattedTime(3721)).to.equal('01:02:01');
    });

    it('and returns a time in format hh:mm:ss for a duration larger than an 100 minutes', () => {
      expect(playTime.getFormattedTime(7201)).to.equal('02:00:01');
    });
  });

  describe('takes a duration in seconds and returns a time in ISO 8601 format ', function() {
    it('for a duration of larger than an hour', () => {
      expect(playTime.getIsoTime(3662)).to.equal('PT1H1M2S');
    });

    it('for a duration of less than an hour', () => {
      expect(playTime.getIsoTime(376)).to.equal('PT6M16S');
    });

    it('for a duration of only seconds', () => {
      expect(playTime.getIsoTime(19)).to.equal('PT19S');
    });

    it('for a duration of zero', () => {
      expect(playTime.getIsoTime(0)).to.equal('P0D');
    });

    it('if duration is not set', () => {
      expect(playTime.getIsoTime()).to.equal('P0D');
    });
  });

});
