/*eslint-disable no-unused-expressions */
import React from 'react/addons';
const TestUtils = React.addons.TestUtils;
import { expect } from 'chai';

import VideoLibraryHeader from 'components/video-library-header';
import SectionHeader from 'components/section-header';
import VideoLibrarySearch from 'components/video-library-search';

// @TODO:@Richard: Why do I get the warning below:
//
// WARN: 'Warning: Any use of a keyed object should be wrapped in React.addons.createFragment(object) before being passed as a child.'
//
// I don't use any keys in the components..
describe('Video Library Header', function() {
  var reactElement;
  var component;

  beforeEach(function() {
    reactElement = <VideoLibraryHeader />;
    component = TestUtils.renderIntoDocument(reactElement);
  });

  describe('renders', function() {
    it('a React Element', function() {
      expect(TestUtils.isElement(reactElement)).to.be.true;
    });

    it('a React Component', function() {
      expect(TestUtils.isCompositeComponentWithType(component, VideoLibraryHeader)).to.be.true;
    });

    it('a DOM Component with a BEM class', function() {
      var componentWithClass = TestUtils.findRenderedDOMComponentWithClass(component, 'video-library-header');
      expect(TestUtils.isDOMComponent(componentWithClass)).to.be.true;
    });

    it('a Header Component', function() {
      expect(TestUtils.isCompositeComponent(TestUtils.findRenderedComponentWithType(component, SectionHeader))).to.be.true;
    });

    it('a Search Component', function() {
      expect(TestUtils.isCompositeComponent(TestUtils.findRenderedComponentWithType(component, VideoLibrarySearch))).to.be.true;
    });
  });
});
