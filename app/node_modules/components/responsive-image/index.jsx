'use strict';

const React = require('react');
const bem = require('react-bem-helper');

const ResponsiveImageMixin = require('mixins/responsive-image');

const classes = new bem({
  name: 'responsive-image',
  prefix: ''
});

const ResponsiveImage = React.createClass({

  mixins: [ResponsiveImageMixin],

  propTypes: {
    size: React.PropTypes.string.isRequired,
    src: React.PropTypes.string.isRequired,
    alt: React.PropTypes.string.isRequired,
    ratio: React.PropTypes.string,
    title: React.PropTypes.string
  },

  getDefaultProps() {
    return {
      ratio: '3x2',
      title: '',
    };
  },

  getInitialState() {
    return {
      responsiveImagesSupported: false,
      loading: true
    };
  },

  hasLoaded() {
    var img = this.refs.img.getDOMNode();
    img.removeEventListener('load', this.hasLoaded);
    this.setState({ loading: false });
  },

  testLoaded() {
    if (this.state.loading && this.state.responsiveImagesSupported) {
      var img = this.refs.img.getDOMNode();
      img.addEventListener('load', this.hasLoaded);
    }
  },

  componentDidMount() {
    this.setState({ responsiveImagesSupported: true });
  },

  componentDidUpdate() {
    this.testLoaded();
  },

  render() {

    var props = this.props;

    var loadingClass = {
      'is-loading': this.state.loading
    };

    var image, imageEl = <img ref='img' {...classes('img')} src={this.responsiveImageSrc(props.src, props.size, props.ratio)} alt={props.alt} title={props.title} />;

    if (this.state.responsiveImagesSupported) {
      image = (
        <div {...classes('', [props.ratio, props.size], loadingClass)}>
          {imageEl}
        </div>
      );
    } else {
      image = (
        <noscript dangerouslySetInnerHTML={{ __html: React.renderToStaticMarkup(
          <picture {...classes('', [props.ratio, props.size, 'fallback'])} alt={props.alt}>
            <source {...classes('img')} srcSet={this.responsiveImageSrc(props.src, 'huge', props.ratio)} media="(min-width:960px)" />
            <source {...classes('img')} srcSet={this.responsiveImageSrc(props.src, 'large', props.ratio)} media="(min-width:640px)" />
            <source {...classes('img')} srcSet={this.responsiveImageSrc(props.src, 'medium', props.ratio)} media="(min-width:320px)" />
            <source {...classes('img')} srcSet={this.responsiveImageSrc(props.src, 'small', props.ratio)} />
            {imageEl}
          </picture>
        )}} />
      );
    }

    return image;
  }

});

module.exports = ResponsiveImage;
