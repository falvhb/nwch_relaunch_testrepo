import React from 'react';
// import _ from 'lodash';
import bem from 'react-bem-helper';

import Picture from 'components/picture';

import { pictureSourcesForImage } from 'helpers/image';

const classes = new bem({
  name: 'responsive-image',
  prefix: ''
});

export default React.createClass({

  displayName: 'ResponsiveImage',

  propTypes: {
    src: React.PropTypes.string.isRequired,
    title: React.PropTypes.string,
    alt: React.PropTypes.string,
    size: React.PropTypes.string.isRequired,
    ratio: React.PropTypes.string,
    letterbox: React.PropTypes.bool,
    rounded: React.PropTypes.bool,
    unresponsive: React.PropTypes.bool
  },

  getDefaultProps() {
    return {
      ratio: '16x9',
      title: '',
      letterbox: false,
      unresponsive: false
    };
  },

  getInitialState() {
    return {
      browser: false
    };
  },

  componentDidMount() {
    this.setState({ browser: true });
  },

  render() {

    const { size, ratio, letterbox, rounded, unresponsive } = this.props;

    const { browser } = this.state;

    let modifiers = {
      [ratio]: true,
      [size]: true,
      letterbox: letterbox,
      rounded: rounded,
      fill: !letterbox
    };

    let picture = unresponsive
      ? <img {...classes('img')} {...this.props} />
      : <Picture {...pictureSourcesForImage(this.props)} />;

    return (
      <div {...classes(null, modifiers)}>
        <div {...classes('box')}>
          <div {...classes('picture')}>
            {browser || unresponsive
              ? picture
              : <noscript dangerouslySetInnerHTML={{ __html: React.renderToStaticMarkup(picture)}} />
            }
          </div>
        </div>
      </div>
    );
  }

});
