/* eslint-disable no-unused-expressions */

import React from 'react/addons';
const TestUtils = React.addons.TestUtils;

import ResponsiveImage from 'components/responsive-image';
import fixtures from 'components/responsive-image/.variations';

import { expect } from 'chai';

describe('ResponsiveImages', function() {

  var responsiveImage, responsiveImageDeferred, element;

  var imageComponent = <ResponsiveImage {...fixtures[1].data} />;
  var imageDeferredComponent = <ResponsiveImage {...fixtures[1].data} />;

  beforeEach(() => {
    responsiveImage = TestUtils.renderIntoDocument(imageComponent);
    responsiveImageDeferred = TestUtils.renderIntoDocument(imageDeferredComponent);
    element = TestUtils.findRenderedDOMComponentWithClass(responsiveImage, 'responsive-image');
  });

  describe('return', function() {

    it('a react component', function() {
      expect(TestUtils.isElement(imageComponent)).to.be.true;
      expect(TestUtils.isElement(imageDeferredComponent)).to.be.true;
    });

    it('a DOM element when rendered', function() {
      expect(TestUtils.isDOMComponent(element)).to.be.true;
    });

  });

  describe('set state', function() {

    describe('for image sources', function() {

      it('of normal images', function() {
        expect(responsiveImage.state.src).to.equal('http://static.azbe.lovelysystems.com/__ip/VkB99wpVQlfPHPT1vJq72klt0Bk/30420d1a9afb2bcb60335812569af4435a59ce17/remote.adjust.rotate=0&remote.size.w=1024&remote.size.h=768&local.crop.h=292&local.crop.w=512&local.crop.x=512&local.crop.y=91,teaser-goldbach/kmPiUazMDGNeeayRqa57xEV6dQI/550x310');
      });

      it('of deferred images', function() {
        expect(responsiveImageDeferred.state.src).to.equal('http://static.azbe.lovelysystems.com/__ip/VkB99wpVQlfPHPT1vJq72klt0Bk/30420d1a9afb2bcb60335812569af4435a59ce17/remote.adjust.rotate=0&remote.size.w=1024&remote.size.h=768&local.crop.h=292&local.crop.w=512&local.crop.x=512&local.crop.y=91,teaser-goldbach/kmPiUazMDGNeeayRqa57xEV6dQI/550x310');
      });

    });

    it('for loading', function() {
      expect(responsiveImage.state.loading).to.equal(true);
    });

    it('for support', function() {
      expect(responsiveImageDeferred.state.support).to.equal(true);
    });

  });

  describe('contain', function() {

    it('for loading', function() {
      expect(responsiveImage.state.loading).to.equal(true);
    });

    it('for support', function() {
      expect(responsiveImageDeferred.state.support).to.equal(true);
    });

  });


  // var image, renderedImage;

  // beforeEach(function() {
  //   image = createComponent(ResponsiveImage, data);
  //   renderedImage = renderedMarkup(image);
  // });

  // describe('renders', function() {
  //   it('div wrapper', function() {
  //     expect(image.type).to.equal('div');
  //   });

  //   it('picture element', function() {
  //     expect(renderedImage).to.contain('<picture');
  //   });

  //   it('image element', function() {
  //     expect(renderedImage).to.contain('<img');
  //   });

  //   it('4 source elements', function() {
  //     expect(renderedImage.split('<source').length).to.equal(5);
  //   });

  //   it('fallback class', function() {
  //     expect(renderedImage).to.contain('responsive-image--fallback');
  //   });

  //   it('alt attribute', function() {
  //     expect(renderedImage).to.contain('alt=');
  //   });
  // });

});
