'use strict';

const React = require('react');
const bem = require('react-bem-helper');

const Stoerer = require('components/stoerer');

const classes = new bem({
  name: 'article-content',
  prefix: ''
});

const ArticleContent = React.createClass({

  injectStoerers() {
    var html = '';
    var token = '<!-- interferer -->';
    var chunks = this.props.text.split(token);
    // @TODO: update code once we support more interferers
    var interferers = this.props.interferers.filter(function(interferer) {
      return interferer.kind === 'TextInterferer';
    });

    for (var i = 0; i < Math.min(chunks.length, interferers.length); i++) {
      html += chunks[i];
      html += React.renderToStaticMarkup(React.createElement(Stoerer, interferers[i]));
    }

    // Make sure we don't love any content if there are more inteferers than content chunks
    if (chunks.length > 0) {
      html += chunks.join('');
    }

    return html;
  },

  render() {
    return (
      <div {...classes()}>
        <p itemProp='description' {...classes('intro', null, 'type-intro')}>{this.props.teaser}</p>
        <div itemProp='articleBody' {...classes('copy', null, 'copy')} dangerouslySetInnerHTML={{ __html: this.injectStoerers(this.props.text) }} />
      </div>
    );
  }

});

module.exports = ArticleContent;
