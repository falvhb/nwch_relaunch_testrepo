import React from 'react';
import BEM from 'react-bem-helper';
import path from 'path';

const classes = new BEM('weather-forecast');

export default React.createClass({

  displayName: 'WeatherForecast',

  propTypes: {
    label: React.PropTypes.string,
    id: React.PropTypes.string,
    modifier: React.PropTypes.string,
    url: React.PropTypes.string,

    minTemperature: React.PropTypes.number.isRequired,
    maxTemperature: React.PropTypes.number.isRequired
  },

  getDefaultProps() {
    return {
      modifier: 'default'
    };
  },

  render() {

    const { label, id, modifier, url, minTemperature, maxTemperature } = this.props;

    var weatherImgUrl = label ? 'blue/' : 'color/';
    var prefix = process.env.STATIC_ASSETS;
    var href = path.join(prefix, 'images/weather/' + weatherImgUrl + id + '.svg');

    const modifiers = {
      img: id && !label,
      [modifier]: !!modifier
    };


    if (label) {
      return (
        <a href={url} {...classes(null, modifiers)}>
          <span {...classes('label')}>{label}</span>
          <div {...classes('icon')}>
            <img {...classes('img')} src={href} />
          </div>
          <div {...classes('temperature')}>
            <div {...classes('max')}>{maxTemperature}째</div>
            <div {...classes('min')}>{minTemperature}째</div>
          </div>
        </a>
      );
    }
    return (
      <div {...classes(null, modifiers)}>
        <div {...classes('icon')}>
          <img {...classes('img')} src={href} />
        </div>
        <div {...classes('temperature')}>
          <div {...classes('max')}>{maxTemperature}째</div>
          <div {...classes('min')}>{minTemperature}째</div>
        </div>
      </div>
    );
  }
});
