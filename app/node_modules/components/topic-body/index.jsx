import React from 'react';
import bem from 'react-bem-helper';

import Wrapper from './wrapper';

import Teaser from 'components/teaser';
import Button from 'components/button';

const classes = new bem({
  name: 'topic-body',
  prefix: ''
});

const TopicBody = React.createClass({

  displayName: 'TopicBody',

  propTypes: {
    topic: React.PropTypes.string.isRequired,
    articles: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,
    page: React.PropTypes.number.isRequired,
    total: React.PropTypes.number.isRequired
  },

  getDefaultProps() {
    return {
      total: 1200,
      perPage: 12,
    };
  },

  // sliceResults(articles, count) {
  //   return articles.slice(0, count);
  // },

  // paginationCalc(offset) {
  //   var page = offset || 1;
  //   return this.state.showing / this.defaultShowing + page;
  // },

  // loadMore() {
  //   this.setState({
  //     showing: this.state.showing + this.defaultShowing
  //   });
  //   this.updateHistory(this.paginationCalc(1));
  // },

  // updateHistory(index) {
  //   history.replaceState(null, document.title, '?page=' + index);
  // },

  paginationUrl(topic, modifier) {
    return '/thema/' + topic + '/seite/' + (this.props.page + modifier);
  },

  render() {

    var { topic, articles, page, total, perPage } = this.props;
    var needsPagination = total > (perPage * page);

    return (
      <div {...classes()}>
        <div {...classes('grid')}>
          {articles.map((article, index) => {
            return (
              <div {...classes('cell')} key={index}>
                <Teaser key={index} {...article} modifier='basic' />
              </div>
            );
          })}
        </div>

        {needsPagination
         ? <nav {...classes('pagination')}>
             <em>Page {page} / {Math.ceil(total / perPage)}</em>
             <ul {...classes('pagination-list')}>
              <li {...classes('pagination-list-item')}>
                <Button {...classes('btn')} url={this.paginationUrl(topic, -1)} label='Prev' />
              </li>
              <li {...classes('pagination-list-item')}>
                <Button {...classes('btn')} url={this.paginationUrl(topic, +1)} label='Mehr' />
              </li>
             </ul>
           </nav>
        :null}
      </div>
    );

  }

});

export default Wrapper(TopicBody);
