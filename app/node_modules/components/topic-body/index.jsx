import React from 'react';
import bem from 'react-bem-helper';

import Wrapper from './wrapper';

import Teaser from 'components/teaser';
import Alert from 'components/alert';
import TopicPagination from 'components/topic-pagination';

const classes = new bem({
  name: 'topic-body',
  prefix: ''
});

const TopicBody = React.createClass({

  displayName: 'TopicBody',

  propTypes: {
    topic: React.PropTypes.string.isRequired,
    articles: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,
    page: React.PropTypes.number.isRequired,
    total: React.PropTypes.number.isRequired
  },

  perPage: process.env.PAGINATED,

  render() {

    var { topic, articles, page, total } = this.props;

    return (
      <div {...classes()}>
        {articles.length > 0
          ? <div {...classes('grid')}>
              {articles.map((article, index) => {
                return (
                  <div {...classes('cell')} key={index}>
                    <Teaser key={index} {...article} />
                  </div>
                );
              })}
            </div>
          : <Alert text='Leider konnten keine Resultate zu Ihrem Suchbegriff gefunden werden' modifier='centered' />
        }
        {total > this.perPage
          ? <TopicPagination topic={topic} perPage={this.perPage} current={page} total={total} />
        :null}
      </div>
    );

  }

});

export default Wrapper(TopicBody);
