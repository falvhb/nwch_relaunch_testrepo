import React from 'react';
import bem from 'react-bem-helper';
import _ from 'lodash';

import Icon from 'components/icon';

const classes = new bem({
  name: 'button',
  prefix: ''
});

export default React.createClass({

  propTypes: {
    label: React.PropTypes.string,
    modifier: React.PropTypes.string,
    attributes: React.PropTypes.object,
    icon: React.PropTypes.string,
    // target is either a string (for a link)
    // or a function (for a button)
    target: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]).isRequired
  },

  render() {

    var iconOnly = this.props.icon && !this.props.label;
    var labelClass = iconOnly ? 'hidden-text' : '';
    var modifiers = _.compact([(iconOnly ? 'icon' : null), this.props.modifier]);
    var content;


    if (typeof this.props.target === 'string') {
      content =
        <a href={this.props.target} {...this.props.attributes} {...classes(null, modifiers)}>
          {this.props.icon ? <Icon id={this.props.icon} /> : ''}
          <span {...classes('label', null, labelClass)}>{this.props.label}</span>
        </a>;
    } else {
      content =
        <button onClick={this.props.target} {...this.props.attributes} {...classes(null, modifiers)}>
          {this.props.icon ? <Icon id={this.props.icon} /> : ''}
          <span {...classes('label', null, labelClass)}>{this.props.label}</span>
        </button>;
    }

    return content;

  }

});
