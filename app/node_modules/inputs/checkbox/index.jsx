import React from 'react';
import bem from 'react-bem-helper';
import InputWrapper from 'inputs/wrapper';

const classes = new bem('input');
const stringOrLabel = React.PropTypes.oneOfType([
  React.PropTypes.string,
  React.PropTypes.element
]);

export default React.createClass({
  displayName: 'CheckboxInput',

  propTypes: {
    label: stringOrLabel,
    className: React.PropTypes.string,
    name: React.PropTypes.string.isRequired,
    description: React.PropTypes.string,
    hint: stringOrLabel,
    onChange: React.PropTypes.func,
    id: React.PropTypes.string,
    type: React.PropTypes.string,
    checked: React.PropTypes.bool,
    value: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.number
    ])
  },

  getInitialState() {
    return {
      checked: this.props.checked
    };
  },

  componentWillReceiveProps: function(nextProps) {
    if (
      nextProps.name !== this.props.name
      || (nextProps.checked && this.state.checked !== nextProps.checked)
    ) {
      this.setState({ checked: nextProps.checked });
    }
  },

  onValueChange: function() {
    var checked = React.findDOMNode(this.refs.input).checked;
    this.setState({ checked });

    if (this.props.onChange) {
      this.props.onChange(this.props.name, checked);
    }
  },

  render() {
    var id = this.props.id || this.props.name;

    return (
      <InputWrapper {...this.props} label='' id={id}>
        <label htmlFor={id} {...classes('label')}>
          <input
            type="checkbox"
            {...classes({ modifier: 'checkbox' })}
            id={id}
            ref='input'
            name={this.props.name}
            onChange={this.onValueChange}
            checked={this.state.checked}
            value={this.props.value}
          />
          <span></span>
          <div {...classes('checkbox-label')}>
            { this.props.label}
          </div>
        </label>
      </InputWrapper>
    );
  }
});
