import React from 'react';
import slugify from 'slugify';
import path from 'path';

import ReadMe from 'styleguide/readme';
import Viewer from 'styleguide/viewer';
import Variations from 'styleguide/variations';
import Loading from 'styleguide/loading';

export default React.createClass({

  propTypes: {
    readme: React.PropTypes.string,
    children: React.PropTypes.element.isRequired,
    component: React.PropTypes.object.isRequired,
    variation: React.PropTypes.object
  },

  mapVariationItems(variations) {
    var props = this.props;
    return variations.map(function(variation) {
      var variationSlug = slugify(variation.title).toLowerCase();
      return {
        title: variation.title,
        link: path.join('/styleguide', props.component.category, props.component.slug, variationSlug),
        slug: variationSlug,
        active: variationSlug === props.variation.slug
      };
    });
  },

  render() {

    var component = this.props.component;
    var variation = this.props.variation;

    var variations =  component.variations && !component.standalone
      ? <Variations variations={this.mapVariationItems(component.variations)} />
      : false;

    var content = component.standalone
      ? <Loading>{this.props.children}</Loading>
      : <Viewer component={component} variation={variation} json={component.data || (variation ? variation.data : false)}>{this.props.children}</Viewer>;

    return (
      <div>
        <ReadMe {...component} />
        {content}
        {variations}
      </div>
    );

  }

});
