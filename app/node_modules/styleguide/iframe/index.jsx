const React = require('react');
const bem = require('react-bem-helper');
const path = require('path');

const classes = new bem({
  name: 'iframe',
  prefix: 'styleguide-'
});

const Menu = React.createClass({

  propTypes: {
    component: React.PropTypes.object.isRequired,
    variation: React.PropTypes.object
  },

  constructUrl(component, variation) {
    return path.join('/styleguide', component.category, component.slug, (variation ? variation.slug : ''), 'preview');
  },

  componentDidMount() {
    var iframe = React.findDOMNode(this.refs.iframePreview);
    var timeout = 2000;

    // Wait `timeout` before trying to resize the height of the iframe
    // The `onload` solution does not work because images inside content are
    // asynchronously loaded, bumping the height of the content after the load
    // event has fired. Too bad... I take full responsibility, sorry. :(
    setTimeout(function() {
      var html = iframe.contentWindow.document.documentElement;
      var body = iframe.contentWindow.document.body;
      var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
      iframe.height = height + 'px';
    }, timeout);
  },

  render() {
    var props = this.props;
    var modifier = props.variation && props.variation.width ? props.variation.width : props.component.width || 'default';

    return (
      <iframe {...classes('', modifier)} width='100%' ref='iframePreview' src={this.constructUrl(props.component, props.variation)}>
        {'Unfortunately, the iframe could not be displayed, sorry! :('}
      </iframe>
    );
  }

});

module.exports = Menu;
