'use strict';

const React = require('react');
const ReactToJsx = require('react-to-jsx');
const Highlight = require('react-highlight');
const bem = require('react-bem-helper');

const Tabs = require('styleguide/tabs');
const IFrame = require('styleguide/iframe');
const Loading = require('styleguide/loading');

const classes = new bem({
  name: 'viewer',
  prefix: 'styleguide-'
});

const Viewer = React.createClass({

  propTypes: {
    category: React.PropTypes.string.isRequired,
    component: React.PropTypes.object.isRequired,
    variation: React.PropTypes.object,
    children: React.PropTypes.element.isRequired
  },

  removeTabs(markup) {
    return markup.replace(/\t/g, '  ');
  },

  render() {

    var sections = [
      {
        title: 'Preview',
        content: this.props.variation && !this.props.variation.iframe ? <IFrame {...this.props} /> : <Loading>{this.props.children}</Loading>
      },
      {
        title: 'JSX',
        content: <Loading><Highlight className='html'>{this.removeTabs(ReactToJsx(this.props.children))}</Highlight></Loading>
      },
      {
        title: 'HTML',
        content: <Loading><Highlight className='html'>{React.renderToStaticMarkup(this.props.children)}</Highlight></Loading>
      },
      {
        title: 'Data',
        content: this.props.json
          ? <Loading><Highlight className='json'>{JSON.stringify(this.props.json, null, 2)}</Highlight></Loading>
          : <p>You should add sample data to <code>.variations.json</code> in the root of this component!</p>
      }
    ];

    return (
      <div {...classes()}>
        <Tabs sections={sections} />
      </div>
    );

  }

});

module.exports = Viewer;
