'use strict';

const React = require('react');
const _ = require('underscore');
const bem = require('react-bem-helper');

const classes = new bem({
  name: 'contextual-navigation',
  prefix: 'styleguide-'
});

const ContextualNavigation = React.createClass({

  propTypes: {
    components: React.PropTypes.array.isRequired
  },

  findComponents() {
    var component = _.find(this.props.components, function(obj) {
      return obj.slug === this.props.name;
    }.bind(this));

    var index = this.props.components.indexOf(component);
    var prevIndex = index - 1 < 0 ? null : index - 1;
    var nextIndex = index + 1 > this.props.components.length - 1 ? null : index + 1;

    return {
      prev: prevIndex !== null ? this.props.components[prevIndex] : null,
      next: nextIndex !== null ? this.props.components[nextIndex] : null
    };
  },

  render() {
    var components = this.findComponents();
    var prevModifiers = ['prev'];
    var nextModifiers = ['next'];

    if (!components.prev) prevModifiers.push('disabled');
    if (!components.next) nextModifiers.push('disabled');

    return (
      <div {...classes()}>
        {components.prev
          ? <a {...classes('link', 'prev')} href={components.prev.route}><strong>Previous</strong>: {components.prev.title}</a>
          : <span {...classes('link', ['prev', 'disabled'])}>No previous page.</span>}
        {components.next
          ? <a {...classes('link', 'next')} href={components.next.route}><strong>Next</strong>: {components.next.title}</a>
          : <span {...classes('link', ['next', 'disabled'])}>No next page.</span>}
      </div>
    );
  }

});

module.exports = ContextualNavigation;
