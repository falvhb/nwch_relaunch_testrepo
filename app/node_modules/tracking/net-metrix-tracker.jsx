/* eslint-disable no-console */
import _ from 'lodash';

export default class NetMetrixTracker {

  static getTag(data) {
    // remove undefined properties first
    let picked = _.pick(data.path, function(v) {
      return (v != null);
    });

    // @TODO: maintain correct order! now order is not enforced...
    // correct order is:
    //
    // product: 'live',
    // sitename: this.props.site,
    // view: this.constructor.displayName.toLowerCase(),
    // path: path,
    // event: event.toLowerCase(),
    // id: id,
    // index: index

    //@TODO: remove non empty values (not correctly working now..)

    let path = _.values(picked).join('/');

    let referer = (document.referer ? `r=${encodeURIComponent(document.referer)}&` : ``);
    let queryString = `?${referer}d=${(new Date()).getTime()}&x=${data.screenWidth}x${data.screenHeight}`;

    let tag = `https://${data.domain}.wemfbox.ch/cgi-bin/ivw/CP/${path}${queryString}`;
    return tag;
  }

  static requestTag(tag) {
    let image = new Image();

    // @TODO: activate tracking on live site only
    // image.src = tag;
  }

  static trackEvent(data) {
    let tag = NetMetrixTracker.getTag(data);
    NetMetrixTracker.requestTag(tag);

    console.info('@TODO: trackEvent (currently tag not requested): ', NetMetrixTracker.getTag(data));

  }

  static trackPageView(data) {
    let tag = NetMetrixTracker.getTag(data);
    NetMetrixTracker.requestTag(tag);

    console.info('@TODO: trackEvent (currently tag not requested): ', NetMetrixTracker.getTag(data));
  }

}
