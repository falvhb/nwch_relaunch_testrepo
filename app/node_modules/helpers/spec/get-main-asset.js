/* eslint-disable no-unused-expressions */

import _ from 'lodash';

import getMainAsset from 'helpers/get-main-asset';
import article from 'utils/data/master-article';

const fixture = article.article.assets;

import { expect } from 'chai';

describe('Helpers', function() {

  describe('getMainAsset', function() {

    it('ignores non-image assets above it', function() {
      let expected = fixture[1];
      let result = getMainAsset(fixture);
      expect(result).to.equal(expected);
    });

    it('returns an image gallery', function() {
      let expected = fixture[1];
      let data = _.at(fixture, 1, 2, 3, 4);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

    it('returns an image', function() {
      let expected = fixture[3];
      let data = _.at(fixture, 3, 2, 4);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

    it('returns the next item when image does not have a source', function() {
      let expected = fixture[2];
      let clone = _.assign({}, fixture[3]);
      clone.image_url = null;
      clone.asset.image_url = null;
      let items = _.at(fixture, 2, 4);
      let data = [clone].concat(items);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

    it('returns a video', function() {
      let expected = fixture[2];
      let data = _.at(fixture, 2, 3);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

    it('returns the next item when video does not have an image', function() {
      let expected = fixture[3];
      let clone = _.assign({}, fixture[2]);
      clone.asset.still_image = null;
      let items = _.at(fixture, 3);
      let data = [clone].concat(items);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

    it('returns null for non image assets', function() {
      let expected = null;
      let data = _.at(fixture, 0, 4);
      let result = getMainAsset(data);
      expect(result).to.equal(expected);
    });

  });

});
