import _ from 'lodash';

import goldbachImageSource from 'helpers/goldbach-image-source';

import imageConfig from 'config/images';

let imageDimensionsForWidthAndRatio = function(width, _ratio) {

  let defaultRatio = '16x9';
  let ratio = _ratio || defaultRatio;

  let factors = ratio.split('x').length < 2
    ? defaultRatio.split('x')
    : ratio.split('x');

  let imageWidth = parseInt(width);
  let widthFactor = parseInt(factors[0]);
  let heightFactor = parseInt(factors[1]);

  let imageHeight = Math.ceil((heightFactor / widthFactor) * imageWidth);

  return {
    width: imageWidth,
    height: imageHeight
  };

};

let imageDimensionsForSizeScreenAndRatio = function(size, screen, ratio) {
  let imageVariation = imageVariationForSizeAndScreen(size, screen);
  let imageWidth = imageWidthForVariation(imageVariation);
  return imageDimensionsForWidthAndRatio(imageWidth, ratio);
};

let imageWidthForVariation = function(variation) {
  let imageWidths = imageConfig.standardImageSizes;
  return _.get(imageWidths, variation);
};

let minWidthForScreenType = function(type) {
  let screenTypes = imageConfig.screenTypes;
  return _.first(_.get(screenTypes, type));
};

let imageVariationForSizeAndScreen = function(size, screen) {
  let responsiveVariations = imageConfig.imageVariations[size];
  return _.get(responsiveVariations, screen);
};

let smallestImageForProps = function(props) {

  let imageDimensions = imageDimensionsForSizeScreenAndRatio(props.size, 'smallPhone', props.ratio);

  let goldbackSettings = _.assign({}, props, imageDimensions);

  return {
    title: props.title,
    alt: props.alt,
    srcSet: goldbachImageSource(goldbackSettings)
  };

};

let createSrcSet = function(props, dimensions) {
  let dimensionsRetina = {
    width: dimensions.width * 2,
    height: dimensions.height * 2,
  };

  let goldbackSettings = _.assign({}, props, dimensions);
  let goldbackSettingsRetina = _.assign({}, props, dimensionsRetina);

  return goldbachImageSource(goldbackSettings)
    + ' 1x, '
    + goldbachImageSource(goldbackSettingsRetina)
    + ' 2x';
};

let mapImageSources = function(props) {

  let stashVariation, objectSources = [];

  Object.keys(imageConfig.screenTypes).map(function(screen) {

    let imageVariation = imageVariationForSizeAndScreen(props.size, screen);
    let imageDimensions = imageDimensionsForSizeScreenAndRatio(props.size, screen, props.ratio);

    if (stashVariation === imageVariation) {
      return false;
    }

    stashVariation = imageVariation;

    let breakpoint = minWidthForScreenType(screen);

    objectSources.push({
      srcSet: createSrcSet(props, imageDimensions),
      media: breakpoint > 0 ? '(min-width:' + breakpoint + 'px)' : null
    });
  });

  return objectSources.reverse();
};

export default function(props) {
  return {
    sources: mapImageSources(props),
    image: smallestImageForProps(props)
  };
}
