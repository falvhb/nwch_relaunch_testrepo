import axios from 'axios';

export default class KalturaAPIClient {
  constructor(options) {
    this.setConfiguration(options.domain, options.ssl);
    this.setAction(options.service, options.action);
    this.setOrderBy(options.orderByKey, options.orderDescending);
    this.setFilter(options.freeText, options.mediaTypeEqual, options.categoriesIdsMatchAnd);
    this.setPager(options.pageIndex, options.pageSize);
    this.setFormat(options.format);
  }

  setConfiguration(domain, ssl) {
    this.domain = domain;
    this.ssl = (ssl ? 'https://' : 'http://');
  }

  setAction(service, action) {
    this.service = service;
    this.action = action;
  }

  setOrderBy(key, descending) {
    this.orderBy = (descending ? '-' : '+') + key;
  }

  setFilter(freeText, mediaTypeEqual, categoriesIdsMatchAnd) {
    this.freeText = freeText + '+';
    this.mediaTypeEqual = mediaTypeEqual;
    this.categoriesIdsMatchAnd = (categoriesIdsMatchAnd ? categoriesIdsMatchAnd : '');
  }

  setPager(index, size) {
    this.pageIndex = index;
    this.pageSize = size;
  }

  setFormat(format) {
    // JSON
    this.format = format;
  }

  getURL() {
    this.url = '?action='+this.action
                + '&filter:categoriesIdsMatchAnd='+this.categoriesIdsMatchAnd
                + '&filter:freeText='+this.freeText
                + '&filter:mediaTypeEqual='+this.mediaTypeEqual
                + '&filter:orderBy='+this.orderBy
                + '&format='+this.format
                + '&pager:pageIndex='+this.pageIndex
                + '&pager:pageSize='+this.pageSize
                + '&service='+this.service;
    return this.url;
  }

  getVideos(onData) {
    var url = this.getURL();
    // console.log(url);
    axios.get(url)
    .then((response) => {
      onData(response.data.objects);
    })
    .catch(function () {
      //@TODO: use transformResponse instead
    });

  }

}

// linting error: export default class KalturaAPIClient;
// exports.module = KalturaAPIClient;
