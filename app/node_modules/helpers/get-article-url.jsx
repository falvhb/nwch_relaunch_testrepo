import slugify from 'slugify';
import _ from 'lodash';

export function formCanonicalUrlPath(article, leadingSlash) {
  let isValid = _.get(article, 'title') && _.get(article, 'id');

  if (isValid) {
    let ressorts = article.ressorts;
    let canonicalRessort = _.first(_.filter(ressorts, { 'ignore_for_canonical_url': false }));
    let mainRessort = canonicalRessort ? canonicalRessort : _.first(ressorts);

    // url format /<ressort>/<subressort>/<name>-<id>
    let paths = [];

    // <ressort>
    if (mainRessort && mainRessort.parent) {
      paths.push(mainRessort.parent.urlpart);
    }

    // <subressort>
    if (mainRessort && mainRessort.urlpart) {
      paths.push(mainRessort.urlpart);
    }

    // <name>
    let name;
    if (article.manual_url) {
      name = slugify(article.manual_url);
    } else if (article.keyword_url && article.keywords) {
      let keywords = article.keywords.join('-');
      name = slugify(keywords);
    } else {
      name = slugify(article.title);
    }

    // + -<id>
    paths.push(name.toLowerCase() + '-' + article.id);

    let result = paths.join('/');
    if (leadingSlash) {
      return '/' + result;
    }
    return result;
  }
  return null;
}

export default function(article) {
  return formCanonicalUrlPath(article, true /*leadingSlash*/) || '#';
}
