import _ from 'lodash';

import getArticleUrl from 'helpers/get-article-url';
import getArticleTitle from 'helpers/get-article-title';
import getArticleSchema from 'helpers/get-article-schema';
import getArticleTheme from 'helpers/get-article-theme';
import getMainAsset from 'helpers/get-main-asset';
import getImageProps from 'helpers/get-image-props';
import getTeaserConfig from 'helpers/get-teaser-config';

export default function(data, view) {

  if (!data) {
    return false;
  }

  const variation = data.variation;
  const article = data.article;

  let teaserConfig = getTeaserConfig(variation);

  // handle our image
  let mainAsset = getMainAsset(_.get(article, 'assets'));
  let hasImage = _.get(teaserConfig, 'imageSize.size');
  let testImageSrc;

  if (mainAsset) {
    testImageSrc = getImageProps(mainAsset);
  }

  // set modifier
  let teaserVariation = hasImage && !testImageSrc
    ? data.fallback || teaserConfig.imageFallback
    : teaserConfig.variation;

  // set supplementary text
  let supplementaryText = teaserConfig.dateFormat
    ? _.get(article, 'dc.created')
    : false;

  return {
    variation: teaserVariation,
    theme: getArticleTheme(article, variation),
    title: getArticleTitle(article),
    catchword: article.context_label,
    link: getArticleUrl(article),
    image: hasImage
      ? getImageProps(mainAsset)
      : null,
    imageSize: hasImage
      ? teaserConfig.imageSize
      : null,
    dateFormat: teaserConfig.dateFormat,
    supplementary: supplementaryText,
    schema: getArticleSchema(article)
  };
}
