
let getSourceValue = (metadataXMLString) => {
  let pattern,
      source;
  try {
    pattern = /<Source>([^>]*)<\/Source>/gi;
    source = pattern.exec(metadataXMLString);
  } catch(error) {
    throw new Error(['Could not extract value of source from XML string in', __filename].join(' '));
  }

  return (source[1] ? source[1] : null);
};

let extractSource = (kalturaResponse) => {
  let metadata;

  if (kalturaResponse.data.objects.length > 1) {
    throw new Error(['Entry has more than 1 metadata objects assigned in', __filename].join(' '));
  }
  try {
    metadata = kalturaResponse.data.objects[0].xml;

    return getSourceValue(metadata);
  } catch(error) {
    throw new Error(['Could not extract field source from Kaltura metadata object in ', __filename].join(' '));
  }
};

export default extractSource;
