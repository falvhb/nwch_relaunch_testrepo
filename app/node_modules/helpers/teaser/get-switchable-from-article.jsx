import _ from 'lodash';

const views = ['small', 'large'];

const defaultView = 'large';

import getTeaserFromArticle from './get-from-article';
import getSwitchableConfig from './get-switchable-config';

export default function(data) {

  if (!data) {
    return false;
  }

  const { article, variation } = data;

  const config = getSwitchableConfig(article);

  let variationProps = {};

  // loop over both views (DRYer)
  _.forEach(views, (view) => {
    // find the variation for the view
    let find = variation + '.' + view;
    let targetVariation = _.get(config, find);
    // assign variation name as an object
    let variationName = { variation: targetVariation };
    // over-write variation passed to this teaser
    let variationParams = _.assign({}, data, variationName);
    // get article data for params
    let variationData = getTeaserFromArticle(variationParams);
    // set props for this view
    variationProps[view] = variationData;
  });

  // merge them, based on which is the default
  // we merge so all data is available when switching responsively
  let initialData;

  if (defaultView === 'small') {
    initialData = _.merge({}, variationProps.large, variationProps.small);
  } else {
    initialData = _.merge({}, variationProps.small, variationProps.large);
  }

  return {
    config: _.get(config, variation),
    teaser: initialData
  };
}
