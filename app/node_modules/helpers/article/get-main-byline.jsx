import _ from 'lodash';

import getSource from 'helpers/asset/get-source';
import getUserName from 'helpers/user/get-name';

const ignoredAuthorByContentType = [
  'ugcnewsarticle'
];

const ignoredSourceByContentType = [
  'ugcnewsarticle'
];

const ignoredSourceByLabelType = [
  'meinung'
];

const slimDateFormatByLabelType = [
  'meinung'
];

const slimModificationFormatByLabelType = [
  'meinung'
];

export default function(article) {

  let contentType = article.content_type;
  let labelType = article.labeltype;
  let user = _.get(article, 'author_detail.user');

  // map out exceptions based on the objects above - switches for label / content type
  let shouldShowAuthor = !_.includes(ignoredAuthorByContentType, contentType);
  let shouldShowSource = !_.includes(ignoredSourceByContentType, contentType) && !_.includes(ignoredSourceByLabelType, labelType);
  let shouldShowSlimDateFormat =  _.includes(slimDateFormatByLabelType, labelType);
  let shouldShowSlimModificationFormatByLabelType = _.includes(slimModificationFormatByLabelType, labelType);

  let published = _.get(article, 'dc.effective');
  let modified = _.get(article, 'dc.modified');

  let date = {
    publicationDate: published,
    modificationDate: modified,
  };

  if (shouldShowSlimModificationFormatByLabelType) date.modificationFormat = 'Zuletzt aktualisiert: %s';
  if (shouldShowSlimDateFormat) date.format = 'slim';

  return {
    author: shouldShowAuthor ? getUserName(user) || article.author : false,
    source: shouldShowSource ? getSource(article.source) : false,
    date: date,
    schema: {
      datePublished: published,
      dateModified: modified
    }
  };

}
