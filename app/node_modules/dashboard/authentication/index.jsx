import React from 'react';
import bem from 'react-bem-helper';
import { capitalize } from 'lodash/string';

import SectionHeader from 'components/section-header';
import TextInput from 'inputs/text';
import TextArea from 'inputs/text-area';

const classes = new bem('authentication-form');

export default React.createClass({

  displayName: 'AuthenticationForm',

  propTypes: {
    type: React.PropTypes.oneOf(['login', 'register'])
  },

  getInitialState() {
    return {
      type: this.props.type || 'login',
      submitting: false,
    }
  },

  onChange(key, value) {
    this.setState({
      [key]: value
    }, () => { console.log('Current form data:', this.state) })
  },

  onFormSubmit(e) {
    e.preventDefault();
    console.log("TODO: submit");
    this.setState({ submitting: true });
  },

  isLoginType() {
    return this.state.type === 'login';
  },

  toggleAuthType(e) {
    e.preventDefault();

    this.setState({
      type: this.isLoginType() ? 'register' : 'login'
    });
  },

  renderHint() {
    return (
      <a href="https://login.azmedien.ch/omni/login/recover/">Passwort vergessen?</a>
    );
  },

  renderHelpText() {
    if (this.isLoginType()) {
      return (
        <p>
          Oder haben sie noch keinen Account?
          <a href="/registrieren" onClick={this.toggleAuthType}>Registrieren</a>
        </p>
     )
    } else {
      return (
        <p>
          Oder haben sie einen Account?
          <a href="/anmelden" onClick={this.toggleAuthType}>Anmelden</a>
        </p>
      )
    }
  },

  renderFieldsForAuthType(type) {
    if (this.isLoginType()) {
      return (
        <div>
          <TextInput className="form-row" name="email" value={ this.state.email } type="email" label="Email" onChange={this.onChange} required='required' />
          <TextInput className="form-row" name="password" value={ this.state.password } label="Passwort" onChange={this.onChange} type="password" hint={this.renderHint()} required='required' />
        </div>
      )
    } else {
      return (
        <div>
          <TextInput className="form-row" name="username" value={ this.state.username } label="Anzeigename" description="Erlaubt sind Buchstaben, Zahlen, Bindestrich, Leerzeichen und Punkt. Minimum 3 Buchstaben" onChange={this.onChange} required='required' />
          <TextInput className="form-row" name="email" value={ this.state.email } type="email" label="Email" onChange={this.onChange} required='required' />
          <TextInput className="form-row" name="password" value={ this.state.password } label="Passwort" onChange={this.onChange} type="password" description="Das passwort muss mindestens 6 Zeichen lang sein" required='required'/>
          <TextInput className="form-row" name="password_confirmation" value={ this.state.password_confirmation } label="Passwort bestÃ¤tigen" onChange={this.onChange} type="password" required='required' />
        </div>
      )
    }
  },

  render() {
    return (
      <form {...classes()} onSubmit={ this.onFormSubmit }>
        <SectionHeader title={ this.isLoginType() ? 'Anmelden' : 'Registrieren'}/>
        { this.renderHelpText() }
        <div {...classes('form')}>
          { this.renderFieldsForAuthType(this.state.type) }

          <div className="form-row">
            <input type="submit" disabled={this.state.submitting} className="form__submit button button--submit" />
          </div>
        </div>
      </form>

    );
  }

});
