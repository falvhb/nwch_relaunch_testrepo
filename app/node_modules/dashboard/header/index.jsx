import React from 'react';
import bem from 'react-bem-helper';
import HeaderLogo from 'components/header-logo';
import Avatar from 'components/avatar';
import LogoutButton from 'dashboard/log-out-button';
import { get } from 'lodash/object';
import { debounce } from 'lodash/function';
import path from 'path';

const classes = new bem('dashboard');
const prefix = process.env.STATIC_ASSETS || '/__node__/__static__/client';
const avatarPlaceholder = path.join(prefix, 'images', 'avatar-fallback.png');

export default React.createClass({

  displayName: 'DashboardHeader',

  propTypes: {
    loggedIn: React.PropTypes.bool
  },

  getInitialState: () => ({
    mobile: false
  }),

  evaluateWidth() {
    let isMobile = window.innerWidth < 500;

    if (this.state.mobile !== isMobile) {
      this.setState({
        mobile: isMobile
      });
    }
  },

  evaluateWidthThrottled: debounce(function() {
    this.evaluateWidth();
  }, 300),

  componentDidMount() {
    this.evaluateWidth();
    window.addEventListener('resize', this.evaluateWidthThrottled);
  },

  renderUserPart() {
    var avatar = this.props.user ? null : avatarPlaceholder;
    if (this.props.loggedIn) {

      return (
        <div {...classes('user')}>
          <Avatar src={avatar} />
          <LogoutButton/>
        </div>
      );
    }
  },

  render() {
    var skin = get(window, 'az.skin', 'aaz');

    return (
      <div {...classes('header', this.props.loggedIn ? 'logged-in' : 'logged-out')} >
        <HeaderLogo id={skin} mobile={this.state.mobile} />
        { this.renderUserPart() }
      </div>
    );
  }

});
