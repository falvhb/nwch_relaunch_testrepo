import React from 'react';

import EnrichmentText from 'components/enrichment-text';
import EnrichmentImage from 'components/enrichment-image';
import EnrichmentDownload from 'components/enrichment-download';
import RawContent from 'components/raw-content';
import Aside from 'components/aside';

export default Component => React.createClass({

  propTypes: {
    assets: React.PropTypes.array.isRequired,
    lead: React.PropTypes.string.isRequired,
    text: React.PropTypes.string.isRequired,
    stoerer: React.PropTypes.array.isRequired,
    keywords: React.PropTypes.array.isRequired
  },

  getEnrichmentComponent(kind) {
    var kinds = {
      'text_stoerer': EnrichmentText,
      'image_stoerer': EnrichmentImage,
      'download_stoerer': EnrichmentDownload,
      // This is meant for the main asset which is not an interferer in itself
      // and has its own `content_type`. Still, we want it to behave the same
      // way as any other stÃ¶rer.
      'asset_image': EnrichmentImage
    };

    if (typeof kinds[kind] === 'undefined') {
      return false;
    }

    return kinds[kind];
  },

  getMainAsset() {
    if (this.props.assets.length > 0) {
      var Asset = this.getEnrichmentComponent(this.props.assets[0].asset.content_type);
      return <Asset {...this.props.assets[0]} />;
    }

    return undefined;
  },

  mappedData() {
    var props = this.props;

    return {
      asset: this.getMainAsset(),
      teaser: props.lead,
      text: this.props.text,
      enrichments: this.props.stoerer,
      tags: props.keywords
    };
  },

  render() {
    return (
      <Component {...this.mappedData()} />
    );
  }

});
