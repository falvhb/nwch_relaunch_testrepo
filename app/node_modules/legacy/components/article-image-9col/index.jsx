import React from 'react';

/**
 * article_macros.pt#articleImage9Col - for grepping ...
 */

/*
<metal:macro define-macro="articleImage9Col">
  <div id="imageplaceholder"
       tal:attributes="class python: 'teaserImageHolder ' + view.mainAssetType()"
       tal:condition="view/providesTeaserCompatibleMainAsset">
    <a href=""
       tal:attributes="href context/@@absolute_url">
      <img src="" alt="" title=""
           width="608"
           height="360"
           tal:attributes="src context/@@teaser_url/large" />
      <tal:block tal:condition="view/mainAssetLabelImg">
        <span tal:attributes="class view/mainAssetLabelImg"></span>
        <span class="assettypeicon"></span>
      </tal:block>
      <span tal:condition="not:view/mainAssetLabelImg"
            class="assettypeicon"></span>
      <span tal:condition="view/mainAssetLabel" class="assettype">
        <span tal:content="structure view/mainAssetLabel"/>
      </span>
    </a>
  </div>
</metal:macro>
*/


export default class ArticleImage9Col extends React.Component {

  render() {
    const { view } = this.props;

    if (view.providesTeaserCompatibleMainAsset) {
      let img_url = view.getTeaserUrl();

      let img=(
          <img src={ img_url } alt="" title=""
             width="608"
             height="360"
          />
      );

      let mainAssetLabelImg = null;
      if (view.mainAssetLabelImg) {
        mainAssetLabelImg = (<span className={view.mainAssetLabelImg} />);
      }

      let assettype = null;
      if (view.mainAssetLabel) {
        assettype = (
          <span className="assettype">
            <span>{view.mainAssetLabel}</span>
          </span>
        );
      }

      return (
        <div className={`teaserImageHolder ${view.mainAssetType}`}>
          <a href={view.getAbsoluteUrl()}>
            {img}
            {mainAssetLabelImg}
            <span className="assettypeicon"/>
            {assettype}
          </a>
        </div>
      );
    }

    return null;
  }

}
