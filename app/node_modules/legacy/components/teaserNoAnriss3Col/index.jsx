import React from 'react';
import ArticleLabel from 'legacy/components/article-label';
import ArticleImage3Col from 'legacy/components/article-image-3col';
import ArticleKeyword3Col from 'legacy/components/article-keyword-3col';
import ArticleHeadline3Col from 'legacy/components/article-headline-3col';
import ArticleAnriss from 'legacy/components/article-anriss';
import ArticleComments from 'legacy/components/article-comments';
import View from 'legacy/helpers/views';

/*
<!-- teaser3Col no Anriss (if image...)-->
<metal:macro define-macro="teaserNoAnriss3Col">
  <div class="teaser teaser-3col">
    <metal:macro use-macro="context/@@ArticleMacros/articleLabel" />
    <tal:cond  tal:condition="view/providesTeaserCompatibleMainAsset">
      <metal:macro use-macro="context/@@ArticleMacros/articleImage3Col" />
      <metal:macro use-macro="context/@@ArticleMacros/ArticleKeyword3Col" />
      <metal:macro use-macro="context/@@ArticleMacros/articleHeadline3Col" />
    </tal:cond>
    <tal:else tal:condition="not:view/providesTeaserCompatibleMainAsset">
      <metal:macro use-macro="context/@@ArticleMacros/ArticleKeyword3Col" />
      <metal:macro use-macro="context/@@ArticleMacros/articleHeadline3Col" />
      <metal:macro use-macro="context/@@ArticleMacros/ArticleAnriss" />
    </tal:else>
    <metal:macro use-macro="context/@@ArticleMacros/ArticleComments" />
  </div>
</metal:macro>
*/


export default class TeaserNoAnriss3Col extends React.Component {

  constructor(props) {
    super(props);
    this.view = new View(this.props.article, { width: 220, height: 130 });
  }

  render() {
    const view = this.view;

    return (
      <div className="teaser teaser-3col">
        <ArticleLabel view={view} />
        {
          (view.providesTeaserCompatibleMainAsset)
          ? <ArticleImage3Col view={view} />
          : null
        }
        <ArticleKeyword3Col view={view} />
        <ArticleHeadline3Col view={view} />
        {
          (!view.providesTeaserCompatibleMainAsset)
          ? <ArticleAnriss view={view} />
          : null
        }
        <ArticleComments view={view} />
      </div>
    );
  }

}
