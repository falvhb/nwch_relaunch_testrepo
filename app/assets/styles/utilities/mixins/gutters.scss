@import 'utilities/variables';

/// Activate a grid layout
/// @access public
/// @param {String} $size ['small'] - set `'small'` (1 x `$container-spacing`) or `'large'` (2 x `$container-spacing`) gutters
@mixin container-gutters($size: 'small') {
  @if ($size == 'small') {
    $gutter: $container-spacing;
  } @else {
    $gutter: $container-spacing * 2;
  }

  padding-left: $gutter;
  padding-right: $gutter;
}

/// Activate a grid layout
/// @access public
/// @param {String} $direction ['pull'] - `'pull'` (outdent) or `'push'` (indent) the edges
/// @param {String} $breakpoint ['both'] - set breakpoints `'both'`, `'mobile'` or `'desktop'`
/// @param {String} $method ['margin'] - set method for spacing `'margin'` or `'padding'`
@mixin edges($direction: 'pull', $breakpoint: 'both', $method: 'margin') {

  @if $direction == 'pull' {
    $factor: -1;
  } @else if $direction == 'push' {
    $factor: 1;
  }

  @if $breakpoint == 'both' or $breakpoint == 'mobile' {
    @include media('<=mobile-portrait') {
      #{$method}-left: $factor * $container-spacing;
      #{$method}-right: $factor * $container-spacing;
    }
  }

  @if $breakpoint == 'both' or $breakpoint == 'desktop' {
    @include media('>mobile-portrait') {
      #{$method}-left: $factor * ($container-spacing * 2);
      #{$method}-right: $factor * ($container-spacing * 2);
    }
  }

}
